local TweenService = game:GetService("TweenService")
local RANOX = {}

function RANOX:CreateWindow(config)
	local screenGui = Instance.new("ScreenGui", game.Players.LocalPlayer:WaitForChild("PlayerGui"))
	screenGui.ResetOnSpawn = false

	local main = Instance.new("Frame", screenGui)
	main.Size = UDim2.new(0, 500, 0, 350)
	main.Position = UDim2.new(0.5, -250, 0.5, -175)
	main.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
	main.BorderSizePixel = 0

	local mainCorner = Instance.new("UICorner", main)
	mainCorner.CornerRadius = UDim.new(0, 12)

	local title = Instance.new("TextLabel", main)
	title.Size = UDim2.new(1, 0, 0, 40)
	title.BackgroundTransparency = 1
	title.Text = config.Name or "RANOX UI"
	title.TextColor3 = Color3.fromRGB(240, 240, 240)
	title.Font = Enum.Font.GothamBold
	title.TextSize = 18

	local tabHolder = Instance.new("Frame", main)
	tabHolder.Size = UDim2.new(0, 120, 1, -40)
	tabHolder.Position = UDim2.new(0, 0, 0, 40)
	tabHolder.BackgroundColor3 = Color3.fromRGB(25, 25, 30)

	local tabCorner = Instance.new("UICorner", tabHolder)
	tabCorner.CornerRadius = UDim.new(0, 10)

	local tabLayout = Instance.new("UIListLayout", tabHolder)
	tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	tabLayout.Padding = UDim.new(0, 6)

	local tabPages = Instance.new("Frame", main)
	tabPages.Size = UDim2.new(1, -130, 1, -50)
	tabPages.Position = UDim2.new(0, 130, 0, 45)
	tabPages.BackgroundTransparency = 1

	local pages = {}

	function RANOX:CreateTab(tabConfig)
		local tabBtn = Instance.new("TextButton", tabHolder)
		tabBtn.Size = UDim2.new(1, -10, 0, 34)
		tabBtn.Text = tabConfig.Name or "Tab"
		tabBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
		tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		tabBtn.Font = Enum.Font.GothamBold
		tabBtn.TextSize = 14
		tabBtn.AutoButtonColor = false

		local btnCorner = Instance.new("UICorner", tabBtn)
		btnCorner.CornerRadius = UDim.new(0, 10)

		tabBtn.MouseEnter:Connect(function()
			TweenService:Create(tabBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 55)}):Play()
		end)
		tabBtn.MouseLeave:Connect(function()
			TweenService:Create(tabBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 45)}):Play()
		end)

		local page = Instance.new("ScrollingFrame", tabPages)
		page.Size = UDim2.new(1, 0, 1, 0)
		page.Visible = false
		page.CanvasSize = UDim2.new(0, 0, 0, 0)
		page.ScrollBarThickness = 3
		page.BackgroundTransparency = 1

		local pageLayout = Instance.new("UIListLayout", page)
		pageLayout.SortOrder = Enum.SortOrder.LayoutOrder
		pageLayout.Padding = UDim.new(0, 8)

		local pagePadding = Instance.new("UIPadding", page)
		pagePadding.PaddingTop = UDim.new(0, 5)
		pagePadding.PaddingLeft = UDim.new(0, 5)
		pagePadding.PaddingRight = UDim.new(0, 5)

		table.insert(pages, page)

		tabBtn.MouseButton1Click:Connect(function()
			for _, p in pairs(pages) do p.Visible = false end
			page.Visible = true
		end)

		local tabFuncs = {}

		function tabFuncs:CreateButton(buttonConfig)
			local button = Instance.new("TextButton", page)
			button.Size = UDim2.new(1, -10, 0, 34)
			button.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
			button.TextColor3 = Color3.fromRGB(240, 240, 240)
			button.Font = Enum.Font.GothamBold
			button.TextSize = 15
			button.Text = buttonConfig.Name or "Button"
			button.AutoButtonColor = false

			local corner = Instance.new("UICorner", button)
			corner.CornerRadius = UDim.new(0, 10)

			button.MouseEnter:Connect(function()
				TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 65)}):Play()
			end)
			button.MouseLeave:Connect(function()
				TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 55)}):Play()
			end)

			button.MouseButton1Click:Connect(function()
				if buttonConfig.Callback then
					pcall(buttonConfig.Callback)
				end
			end)
		end

		function tabFuncs:CreateToggle(toggleConfig)
			local toggle = Instance.new("TextButton", page)
			toggle.Size = UDim2.new(1, -10, 0, 34)
			toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
			toggle.Text = ""

			local corner = Instance.new("UICorner", toggle)
			corner.CornerRadius = UDim.new(0, 10)

			local label = Instance.new("TextLabel", toggle)
			label.Text = toggleConfig.Name or "Toggle"
			label.Size = UDim2.new(1, -50, 1, 0)
			label.Position = UDim2.new(0, 10, 0, 0)
			label.BackgroundTransparency = 1
			label.TextColor3 = Color3.fromRGB(240, 240, 240)
			label.Font = Enum.Font.Gotham
			label.TextSize = 15
			label.TextXAlignment = Enum.TextXAlignment.Left

			local indicator = Instance.new("Frame", toggle)
			indicator.Size = UDim2.new(0, 28, 0, 14)
			indicator.Position = UDim2.new(1, -38, 0.5, -7)
			indicator.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

			local indCorner = Instance.new("UICorner", indicator)
			indCorner.CornerRadius = UDim.new(1, 0)

			local ball = Instance.new("Frame", indicator)
			ball.Size = UDim2.new(0, 14, 0, 14)
			ball.Position = UDim2.new(0, 0, 0, 0)
			ball.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

			local ballCorner = Instance.new("UICorner", ball)
			ballCorner.CornerRadius = UDim.new(1, 0)

			local toggled = false

			toggle.MouseButton1Click:Connect(function()
				toggled = not toggled
				TweenService:Create(ball, TweenInfo.new(0.2), {
					Position = toggled and UDim2.new(1, -14, 0, 0) or UDim2.new(0, 0, 0, 0)
				}):Play()
				indicator.BackgroundColor3 = toggled and Color3.fromRGB(0, 200, 80) or Color3.fromRGB(100, 100, 100)
				if toggleConfig.Callback then
					pcall(toggleConfig.Callback, toggled)
				end
			end)
		end

                function tabFuncs:CreateDropdown(dropdownConfig)
    local dropdown = Instance.new("TextButton", page)
    dropdown.Size = UDim2.new(1, -10, 0, 34)
    dropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
    dropdown.Text = dropdownConfig.Name or "Dropdown"
    dropdown.TextColor3 = Color3.fromRGB(240, 240, 240)
    dropdown.Font = Enum.Font.GothamBold
    dropdown.TextSize = 15
    dropdown.AutoButtonColor = false

    local dropdownCorner = Instance.new("UICorner", dropdown)
    dropdownCorner.CornerRadius = UDim.new(0, 10)

    local dropdownFrame = Instance.new("Frame", dropdown)
    dropdownFrame.Size = UDim2.new(1, 0, 0, 0)
    dropdownFrame.Position = UDim2.new(0, 0, 1, 0)
    dropdownFrame.BackgroundTransparency = 1

    local dropdownLayout = Instance.new("UIListLayout", dropdownFrame)
    dropdownLayout.SortOrder = Enum.SortOrder.LayoutOrder
    dropdownLayout.Padding = UDim.new(0, 4)

    local isOpen = false
    dropdown.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        dropdownFrame.Visible = isOpen
        if dropdownConfig.Callback then
            pcall(dropdownConfig.Callback, isOpen)
        end
    end)

    for _, option in ipairs(dropdownConfig.Options or {}) do
        local optionButton = Instance.new("TextButton", dropdownFrame)
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
        optionButton.TextColor3 = Color3.fromRGB(240, 240, 240)
        optionButton.Font = Enum.Font.Gotham
        optionButton.TextSize = 14
        optionButton.Text = option
        optionButton.AutoButtonColor = false

        local optionCorner = Instance.new("UICorner", optionButton)
        optionCorner.CornerRadius = UDim.new(0, 10)

        optionButton.MouseButton1Click:Connect(function()
            if dropdownConfig.OptionCallback then
                pcall(dropdownConfig.OptionCallback, option)
            end
            dropdownFrame.Visible = false
        end)
    end
end

function tabFuncs:CreateSlider(sliderConfig)
    local slider = Instance.new("Frame", page)
    slider.Size = UDim2.new(1, -10, 0, 34)
    slider.BackgroundColor3 = Color3.fromRGB(50, 50, 55)

    local sliderLabel = Instance.new("TextLabel", slider)
    sliderLabel.Size = UDim2.new(1, -50, 1, 0)
    sliderLabel.Text = sliderConfig.Name or "Slider"
    sliderLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.TextSize = 15
    sliderLabel.BackgroundTransparency = 1

    local sliderBar = Instance.new("Frame", slider)
    sliderBar.Size = UDim2.new(1, -50, 0, 5)
    sliderBar.Position = UDim2.new(0, 0, 1, -8)
    sliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

    local sliderHandle = Instance.new("Frame", sliderBar)
    sliderHandle.Size = UDim2.new(0, 20, 1, 0)
    sliderHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

    local dragging = false
    sliderHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    sliderHandle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging then
            local newPos = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X - sliderHandle.AbsoluteSize.X)
            sliderHandle.Position = UDim2.new(0, newPos, 0, 0)
            local value = (newPos / (sliderBar.AbsoluteSize.X - sliderHandle.AbsoluteSize.X)) * (sliderConfig.MaxValue - sliderConfig.MinValue) + sliderConfig.MinValue
            if sliderConfig.Callback then
                pcall(sliderConfig.Callback, value)
            end
        end
    end)
end

		function tabFuncs:CreateLabel(text)
			local label = Instance.new("TextLabel", page)
			label.Size = UDim2.new(1, -10, 0, 30)
			label.BackgroundTransparency = 1
			label.Text = text or ""
			label.TextColor3 = Color3.fromRGB(180, 180, 180)
			label.Font = Enum.Font.Gotham
			label.TextSize = 14
			label.TextXAlignment = Enum.TextXAlignment.Left
		end

		function tabFuncs:CreateTextbox(textboxConfig)
			local box = Instance.new("TextBox", page)
			box.Size = UDim2.new(1, -10, 0, 34)
			box.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
			box.TextColor3 = Color3.fromRGB(255, 255, 255)
			box.PlaceholderText = textboxConfig.Placeholder or "Enter text"
			box.Font = Enum.Font.Gotham
			box.TextSize = 15

			local boxCorner = Instance.new("UICorner", box)
			boxCorner.CornerRadius = UDim.new(0, 10)

			box.FocusLost:Connect(function(enter)
				if enter and textboxConfig.Callback then
					pcall(textboxConfig.Callback, box.Text)
				end
			end)
		end

		return tabFuncs
	end

	return RANOX
end

return RANOX
