if game.Players.LocalPlayer:FindFirstChild("InterfaceExecutada") then
    warn("A interface já foi executada anteriormente. Execução ignorada.")
    return
end

local Interface = {}

-- Criando a interface principal
function Interface:CreateMainUI()
    local flag = Instance.new("BoolValue")
    flag.Name = "InterfaceExecutada"
    flag.Parent = game.Players.LocalPlayer

    local tweenService = game:GetService("TweenService")
    local gui = Instance.new("ScreenGui")
    gui.Parent = game.Players.LocalPlayer.PlayerGui
    gui.ResetOnSpawn = false

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.8, 0, 1.1, 0)
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Position = UDim2.new(0.5, 0, 0.5, 0)
    frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    frame.BackgroundTransparency = 0.1
    frame.BorderSizePixel = 0
    frame.Visible = false
    frame.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.05, 0)
    corner.Parent = frame

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.1, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    title.BorderSizePixel = 0
    title.Text = "PAINEL"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 30
    title.TextWrapped = true
    title.Parent = frame

    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(0.95, 0, 0.85, 0)
    scrollingFrame.Position = UDim2.new(0.025, 0, 0.12, 0)
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
    scrollingFrame.ScrollBarThickness = 10
    scrollingFrame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scrollingFrame.Parent = frame

    local layout = Instance.new("UIGridLayout")
    layout.CellPadding = UDim2.new(0.02, 0, 0.06, 0)
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    layout.VerticalAlignment = Enum.VerticalAlignment.Top
    layout.Parent = scrollingFrame

    self.tweenService = tweenService
    self.gui = gui
    self.frame = frame
    self.scrollingFrame = scrollingFrame
    self.buttons = {}
    self.toggles = {}
    self.sliders = {}

    local function animateFrameIn()
        frame.Visible = true
        local tweenIn = tweenService:Create(
            frame,
            TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {Size = UDim2.new(0.8, 0, 1.1, 0)}
        )
        tweenIn:Play()
    end

    local function animateFrameOut()
        local tweenOut = tweenService:Create(
            frame,
            TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {Size = UDim2.new(0, 0, 0, 0)}
        )
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            frame.Visible = false
        end)
    end

    local hideButton = Instance.new("ImageButton")
    hideButton.Size = UDim2.new(0.05, 0, 0.05, 0)
    hideButton.Position = UDim2.new(0.95, -10, 0, 10)
    hideButton.Image = "rbxassetid://6035047409"
    hideButton.BackgroundTransparency = 1
    hideButton.Parent = frame
    hideButton.MouseButton1Click:Connect(function()
        animateFrameOut()
    end)

    animateFrameIn()
end

-- Função para criar botões
function Interface:CreateButton(params)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.2, 0, 0.1, 0)
    button.Text = params.Nome or "Botão"
    button.BackgroundColor3 = params.Cor or Color3.fromRGB(35, 35, 35)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.Gotham
    button.TextSize = 18
    button.TextWrapped = true
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.05, 0)
    corner.Parent = button
    button.MouseButton1Click:Connect(function()
        if params.Acao then
            local success, err = pcall(params.Acao)
            if not success then
                warn("Erro no botão: " .. err)
            end
        end
    end)
    button.Parent = self.scrollingFrame
end

-- Função para criar toggles
function Interface:CreateToggle(params)
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0.2, 0, 0.1, 0)
    toggle.Text = params.Nome or "Toggle"
    toggle.BackgroundColor3 = params.Cor or Color3.fromRGB(35, 35, 35)
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.Font = Enum.Font.GothamBold
    toggle.TextSize = 14
    local active = false
    toggle.MouseButton1Click:Connect(function()
        active = not active
        toggle.BackgroundColor3 = active and Color3.fromRGB(0, 255, 0) or (params.Cor or Color3.fromRGB(35, 35, 35))
        if params.Acao then
            local success, err = pcall(function() params.Acao(active) end)
            if not success then
                warn("Erro no toggle: " .. err)
            end
        end
    end)
    toggle.Parent = self.scrollingFrame
end

-- Função para criar sliders
function Interface:CreateSlider(params)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0.8, 0, 0.1, 0)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    sliderFrame.BorderSizePixel = 0
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = sliderFrame

    local handle = Instance.new("Frame")
    handle.Size = UDim2.new(0.05, 0, 1, 0)
    handle.BackgroundColor3 = params.Cor or Color3.fromRGB(255, 255, 255)
    handle.BorderSizePixel = 0
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(1, 0)
    handleCorner.Parent = handle
    handle.Parent = sliderFrame

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            game:GetService("UserInputService").InputChanged:Connect(function(move)
                if move.UserInputType == Enum.UserInputType.MouseMovement then
                    local position = math.clamp((move.Position.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
                    local value = math.floor((params.Min or 0) + ((params.Max or 100) - (params.Min or 0)) * position)
                    if params.Acao then
                        pcall(function() params.Acao(value) end)
                    end
                end
            end)
        end
    end)

    sliderFrame.Parent = self.scrollingFrame
end

return Interface
