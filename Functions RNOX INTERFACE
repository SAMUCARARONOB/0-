local RNOX = {}

function RNOX:CreateMainUI(params)
    local gui = Instance.new("ScreenGui")
    gui.Parent = game.Players.LocalPlayer.PlayerGui
    gui.ResetOnSpawn = false

    local baseFrame = Instance.new("Frame")
    baseFrame.Size = UDim2.new(0, 450, 0, 350)
    baseFrame.Position = UDim2.new(0.5, -225, 0.5, -175)
    baseFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
    baseFrame.BorderSizePixel = 0
    baseFrame.Active = true
    baseFrame.Draggable = true
    baseFrame.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.1, 0)
    corner.Parent = baseFrame

    local header = Instance.new("TextLabel")
    header.Size = UDim2.new(1, 0, 0.15, 0)
    header.BackgroundColor3 = params.TituloCor or Color3.fromRGB(20, 20, 20)
    header.Text = "RNOX Interface"
    header.TextColor3 = Color3.fromRGB(255, 255, 255)
    header.Font = Enum.Font.GothamBold
    header.TextSize = 24
    header.Parent = baseFrame

    local cornerHeader = Instance.new("UICorner")
    cornerHeader.CornerRadius = UDim.new(0.1, 0)
    cornerHeader.Parent = header

    local tabScrollFrame = Instance.new("ScrollingFrame")
    tabScrollFrame.Size = UDim2.new(1, 0, 0.1, 0)
    tabScrollFrame.Position = UDim2.new(0, 0, 0.15, 0)
    tabScrollFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    tabScrollFrame.ScrollBarThickness = 10
    tabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabScrollFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    tabScrollFrame.Parent = baseFrame

    local cornerTabFrame = Instance.new("UICorner")
    cornerTabFrame.CornerRadius = UDim.new(0.1, 0)
    cornerTabFrame.Parent = tabScrollFrame

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.Padding = UDim.new(0.02, 0)
    tabLayout.Parent = tabScrollFrame

    self.gui = gui
    self.baseFrame = baseFrame
    self.tabScrollFrame = tabScrollFrame
    self.tabs = {}
    self.columns = {}
end

function RNOX:AddTab(params)
    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Size = UDim2.new(1, 0, 0.75, 0)
    tabContent.Position = UDim2.new(0, 0, 0.25, 0)
    tabContent.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabContent.Visible = false
    tabContent.ScrollBarThickness = 10
    tabContent.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    tabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tabContent.Parent = self.baseFrame

    local cornerTabContent = Instance.new("UICorner")
    cornerTabContent.CornerRadius = UDim.new(0.1, 0)
    cornerTabContent.Parent = tabContent

    local gridLayout = Instance.new("UIGridLayout")
    gridLayout.CellPadding = UDim2.new(0.02, 0, 0.02, 0)
    gridLayout.CellSize = UDim2.new(1 / params.Colunas, -10, 0.1, 0)
    gridLayout.FillDirection = Enum.FillDirection.Horizontal
    gridLayout.FillDirectionMaxCells = params.Colunas or 2
    gridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    gridLayout.Parent = tabContent

    local tabButton = Instance.new("TextButton")
    tabButton.Text = params.Nome or "Aba"
    tabButton.Size = UDim2.new(0, 100, 1, 0)
    tabButton.BackgroundColor3 = params.Cor or Color3.fromRGB(70, 70, 70)
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.GothamBold
    tabButton.TextSize = 16

    local cornerTabButton = Instance.new("UICorner")
    cornerTabButton.CornerRadius = UDim.new(0.1, 0)
    cornerTabButton.Parent = tabButton

    tabButton.MouseButton1Click:Connect(function()
        for _, content in pairs(self.tabs) do
            content.Visible = false
        end
        tabContent.Visible = true
    end)

    tabButton.Parent = self.tabScrollFrame
    self.tabScrollFrame.CanvasSize = UDim2.new(0, self.tabScrollFrame.UIListLayout.AbsoluteContentSize.X, 0, 0)
    table.insert(self.tabs, tabContent)

    if params.Default then
        tabContent.Visible = true
    end

    return tabContent
end

function RNOX:AddButton(columnIndex, params)
    if self.columns and self.columns[columnIndex] then
        local parent = self.columns[columnIndex]
        local buttonFrame = Instance.new("Frame")
        buttonFrame.Size = UDim2.new(1, 0, 0.1, 0)
        buttonFrame.BackgroundTransparency = 1
        buttonFrame.Parent = parent

        local button = Instance.new("TextButton")
        button.Text = params.Nome or "Bot達o"
        button.Size = UDim2.new(1, -4, 1, -4)
        button.Position = UDim2.new(0, 2, 0, 2)
        button.BackgroundColor3 = params.Cor or Color3.fromRGB(100, 100, 100)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.Parent = buttonFrame

        button.MouseButton1Click:Connect(function()
            if params.Acao then
                local success, err = pcall(params.Acao)
                if not success then
                    warn("Erro no bot達o: " .. err)
                end
            end
        end)
    else
        warn("Coluna " .. tostring(columnIndex) .. " n達o encontrada.")
    end
end

function RNOX:AddToggle(columnIndex, params)
    if self.columns and self.columns[columnIndex] then
        local parent = self.columns[columnIndex]
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Size = UDim2.new(1, 0, 0.1, 0)
        toggleFrame.BackgroundTransparency = 1
        toggleFrame.Parent = parent

        local toggleText = Instance.new("TextLabel")
        toggleText.Text = params.Nome or "Toggle"
        toggleText.Size = UDim2.new(0.7, 0, 1, 0)
        toggleText.BackgroundTransparency = 1
        toggleText.Font = Enum.Font.GothamBold
        toggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleText.TextSize = 18
        toggleText.Parent = toggleFrame

        local toggleButton = Instance.new("TextButton")
        toggleButton.Size = UDim2.new(0.2, 0, 0.8, 0)
        toggleButton.Position = UDim2.new(0.75, 0, 0.1, 0)
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        toggleButton.Text = ""
        toggleButton.Parent = toggleFrame

        local cornerToggleFrame = Instance.new("UICorner")
        cornerToggleFrame.CornerRadius = UDim.new(0.15, 0)
        cornerToggleFrame.Parent = toggleFrame

        local cornerToggleButton = Instance.new("UICorner")
        cornerToggleButton.CornerRadius = UDim.new(0.5, 0)
        cornerToggleButton.Parent = toggleButton

        local state = false
        toggleButton.MouseButton1Click:Connect(function()
            state = not state
            toggleButton.BackgroundColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            if params.Acao then
                local success, err = pcall(params.Acao, state)
                if not success then
                    warn("Erro no toggle: " .. err)
                end
            end
        end)
    else
        warn("Coluna " .. tostring(columnIndex) .. " n達o encontrada.")
    end
end

return RNOX
