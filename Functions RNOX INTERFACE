local RNOX = {}

function RNOX:CreateMainUI(params)
    local gui = Instance.new("ScreenGui")
    gui.Parent = game.Players.LocalPlayer.PlayerGui
    gui.ResetOnSpawn = false

    local baseFrame = Instance.new("Frame")
    baseFrame.Size = UDim2.new(0, 350, 0, 350)
    baseFrame.Position = UDim2.new(0.5, -225, 0.5, -175)
    baseFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
    baseFrame.BorderSizePixel = 0
    baseFrame.Active = true
    baseFrame.Draggable = true
    baseFrame.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.1, 0)
    corner.Parent = baseFrame

    local header = Instance.new("TextLabel")
    header.Size = UDim2.new(1, -20, 0.25, 0) -- Ajusta para nunca ultrapassar os limites
    header.Position = UDim2.new(0, 10, 0, 5.5) -- Centraliza corretamente
    header.BackgroundColor3 = params.TituloCor or Color3.fromRGB(20, 20, 20)
    header.Text = params.Titulo or "RNOX Interface" -- Define título padrão ou dinâmico
    header.TextColor3 = params.TituloTextoCor or Color3.fromRGB(255, 255, 255) -- Cor dinâmica do texto
    header.Font = Enum.Font.GothamBold
    header.TextScaled = true -- Escala o texto automaticamente ao tamanho da interface
    header.TextWrapped = true -- Garante que o texto seja quebrado se necessário
    header.Parent = baseFrame

    local cornerHeader = Instance.new("UICorner")
    cornerHeader.CornerRadius = UDim.new(0.1, 0)
    cornerHeader.Parent = header

    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Size = UDim2.new(0.95, 0, 0.6, 0) -- O ScrollingFrame ocupa 95% da largura e 60% da altura da interface principal
    tabContent.Position = UDim2.new(0.025, 0, 0.2, 0) -- Centralizado horizontalmente e ajustado verticalmente
    tabContent.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabContent.Visible = false
    tabContent.ScrollBarThickness = 10
    tabContent.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    tabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tabContent.Parent = self.baseFrame

    local cornerTabContent = Instance.new("UICorner")
    cornerTabContent.CornerRadius = UDim.new(0.1, 0)
    cornerTabContent.Parent = tabContent

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.Padding = UDim.new(0.02, 0)
    tabLayout.Parent = tabScrollFrame

    self.gui = gui
    self.baseFrame = baseFrame
    self.header = header -- Salva referência ao cabeçalho
    self.tabScrollFrame = tabScrollFrame
    self.tabs = {}
end

function RNOX:UpdateHeader(params)
    -- Atualiza o título dinamicamente
    if params.Titulo then
        self.header.Text = params.Titulo
    end
    if params.TituloCor then
        self.header.BackgroundColor3 = params.TituloCor
    end
    if params.TituloTextoCor then
        self.header.TextColor3 = params.TituloTextoCor
    end
end

function RNOX:AddTab(params)
    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Size = UDim2.new(1, 0, 0.75, 0)
    tabContent.Position = UDim2.new(0, 0, 0.25, 0)
    tabContent.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    tabContent.Visible = false
    tabContent.ScrollBarThickness = 10
    tabContent.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    tabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tabContent.Parent = self.baseFrame

    local cornerTabContent = Instance.new("UICorner")
    cornerTabContent.CornerRadius = UDim.new(0.1, 0)
    cornerTabContent.Parent = tabContent

    local gridLayout = Instance.new("UIGridLayout")
    gridLayout.CellPadding = UDim2.new(0.02, 0, 0.02, 0)
    gridLayout.CellSize = UDim2.new(1 / params.Colunas, -10, 0.1, 0)
    gridLayout.FillDirection = Enum.FillDirection.Horizontal
    gridLayout.FillDirectionMaxCells = params.Colunas or 2
    gridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    gridLayout.Parent = tabContent

    local tabButton = Instance.new("TextButton")
    tabButton.Text = params.Nome or "Aba"
    tabButton.Size = UDim2.new(0, 100, 1, 0)
    tabButton.BackgroundColor3 = params.Cor or Color3.fromRGB(70, 70, 70)
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.GothamBold
    tabButton.TextSize = 16

    local cornerTabButton = Instance.new("UICorner")
    cornerTabButton.CornerRadius = UDim.new(0.1, 0)
    cornerTabButton.Parent = tabButton

    tabButton.MouseButton1Click:Connect(function()
        for _, content in pairs(self.tabs) do
            content.Visible = false
        end
        tabContent.Visible = true
    end)

    tabButton.Parent = self.tabScrollFrame
    self.tabScrollFrame.CanvasSize = UDim2.new(0, self.tabScrollFrame.UIListLayout.AbsoluteContentSize.X, 0, 0)
    table.insert(self.tabs, tabContent)

    if params.Default then
        tabContent.Visible = true
    end

    return tabContent
end

function RNOX:AddButton(parent, params)
    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 2, 0.1, 2)
    borderFrame.Position = UDim2.new(0, -1, 0, -1)
    borderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    borderFrame.BorderSizePixel = 0
    borderFrame.Parent = parent

    local button = Instance.new("TextButton")
    button.Text = params.Nome or "Botão"
    button.Size = UDim2.new(1, -2, 1, -2)
    button.Position = UDim2.new(0, 1, 0, 1)
    button.BackgroundColor3 = params.Cor or Color3.fromRGB(100, 100, 100)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 18
    button.Parent = borderFrame

    local cornerButton = Instance.new("UICorner")
    cornerButton.CornerRadius = UDim.new(0.2, 0)
    cornerButton.Parent = button

    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
    end)

    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = params.Cor or Color3.fromRGB(100, 100, 100)
    end)

    button.MouseButton1Click:Connect(function()
        if params.Acao then
            local success, err = pcall(params.Acao)
            if not success then
                warn("Erro no botão: " .. err)
            end
        end
    end)
end

function RNOX:AddToggle(parent, params)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, 0, 0.1, 0)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

    local cornerToggleFrame = Instance.new("UICorner")
    cornerToggleFrame.CornerRadius = UDim.new(0.15, 0)
    cornerToggleFrame.Parent = toggleFrame

    local toggleText = Instance.new("TextLabel")
    toggleText.Text = params.Nome or "Toggle"
    toggleText.Size = UDim2.new(0.7, 0, 1, 0)
    toggleText.BackgroundTransparency = 1
    toggleText.Font = Enum.Font.GothamBold
    toggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleText.TextSize = 18
    toggleText.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0.2, 0, 0.8, 0)
    toggleButton.Position = UDim2.new(0.75, 0, 0.1, 0)
    toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame

    local cornerToggleButton = Instance.new("UICorner")
    cornerToggleButton.CornerRadius = UDim.new(0.5, 0)
    cornerToggleButton.Parent = toggleButton

    local state = false
    toggleButton.MouseButton1Click:Connect(function()
        state = not state
        toggleButton.BackgroundColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        if params.Acao then
            local success, err = pcall(params.Acao, state)
            if not success then
                warn("Erro no toggle: " .. err)
            end
        end
    end)

    toggleFrame.Parent = parent
end

return RNOX
