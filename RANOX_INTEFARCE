local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local RANOX = {}

function RANOX:CreateWindow(config)
	local Window = {}

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "RANOX_UI"
	screenGui.ResetOnSpawn = false
	screenGui.IgnoreGuiInset = true
	screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	screenGui.Parent = player:WaitForChild("PlayerGui")

	local mainFrame = Instance.new("TextButton")
	mainFrame.Size = UDim2.new(0, 550, 0, 375)
	mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	mainFrame.Text = ""
	mainFrame.AutoButtonColor = false
	mainFrame.ClipsDescendants = true
	mainFrame.Draggable = true
	mainFrame.Active = true
	mainFrame.Parent = screenGui
	Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 4)

	local stroke = Instance.new("UIStroke", mainFrame)
	stroke.Color = Color3.fromRGB(60, 0, 0)
	stroke.Thickness = 1.5
	stroke.Transparency = 0.3

	local gradient = Instance.new("UIGradient", mainFrame)
	gradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(30,30,30)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(20,20,20))
	}

	local title = Instance.new("TextLabel", mainFrame)
	title.Size = UDim2.new(1, -50, 0, 25)
	title.Position = UDim2.new(0, 10, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = config.Title or "RANOX Hub"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.Font = Enum.Font.GothamSemibold
	title.TextSize = 16
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.TextYAlignment = Enum.TextYAlignment.Center
	title.ClipsDescendants = true

	local hideButton = Instance.new("TextButton", mainFrame)
	hideButton.Size = UDim2.new(0, 25, 0, 25)
	hideButton.Position = UDim2.new(1, -30, 0, 0)
	hideButton.Text = "-"
	hideButton.Font = Enum.Font.GothamBold
	hideButton.TextSize = 18
	hideButton.TextColor3 = Color3.fromRGB(255, 80, 80)
	hideButton.BackgroundTransparency = 1
	hideButton.AutoButtonColor = false

	local line = Instance.new("Frame", mainFrame)
	line.Size = UDim2.new(1, 0, 0, 1)
	line.Position = UDim2.new(0, 0, 0, 25)
	line.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
	line.BorderSizePixel = 0

	local sidebar = Instance.new("ScrollingFrame", mainFrame)
	sidebar.Size = UDim2.new(0, 70, 1, -25)
	sidebar.Position = UDim2.new(0, 0, 0, 25)
	sidebar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
	sidebar.CanvasSize = UDim2.new(0, 0, 0, 0)
	sidebar.ScrollBarThickness = 2
	sidebar.BorderSizePixel = 0
	sidebar.AutomaticCanvasSize = Enum.AutomaticSize.Y
	sidebar.ScrollingDirection = Enum.ScrollingDirection.Y
	Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 3)

	local sidebarLayout = Instance.new("UIListLayout", sidebar)
	sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
	sidebarLayout.Padding = UDim.new(0, 6)

	local tabButtons = {}
	local pages = {}
	local selectedTab = nil

	local scrollHolder = Instance.new("ScrollingFrame", mainFrame)
	scrollHolder.Size = UDim2.new(1, -80, 1, -35)
	scrollHolder.Position = UDim2.new(0, 75, 0, 30)
	scrollHolder.BackgroundTransparency = 1
	scrollHolder.BorderSizePixel = 0
	scrollHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollHolder.ScrollBarThickness = 0
	scrollHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y

	local function switchTab(name)
		for tabName, frame in pairs(pages) do
			frame.Visible = (tabName == name)
		end
		for tabName, btn in pairs(tabButtons) do
			btn.BackgroundColor3 = (tabName == name) and Color3.fromRGB(40, 0, 0) or Color3.fromRGB(10, 10, 10)
		end
		selectedTab = name
	end

	function Window:CreateTab(tabName)
		local tabBtn = Instance.new("TextButton", sidebar)
		tabBtn.Size = UDim2.new(1, 0, 0, 24)
		tabBtn.Text = tabName
		tabBtn.Font = Enum.Font.Gotham
		tabBtn.TextSize = 12
		tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		tabBtn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
		tabBtn.AutoButtonColor = false
		tabBtn.ClipsDescendants = true
		tabBtn.TextWrapped = true
		Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 3)

		tabButtons[tabName] = tabBtn

		tabBtn.MouseEnter:Connect(function()
			if selectedTab ~= tabName then
				tabBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
			end
		end)

		tabBtn.MouseLeave:Connect(function()
			if selectedTab ~= tabName then
				tabBtn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
			end
		end)

		local tabPage = Instance.new("Frame", scrollHolder)
		tabPage.Name = tabName
		tabPage.Size = UDim2.new(1, 0, 0, 1000)
		tabPage.BackgroundTransparency = 1
		tabPage.Visible = false

		local layout = Instance.new("UIListLayout", tabPage)
		layout.SortOrder = Enum.SortOrder.LayoutOrder
		layout.Padding = UDim.new(0, 8)

		pages[tabName] = tabPage

		tabBtn.MouseButton1Click:Connect(function()
			switchTab(tabName)
		end)

		if not selectedTab then
			switchTab(tabName)
		end
	end

	function Window:CreateButton(tabName, text, callback)
		local tab = pages[tabName]
		if not tab then return end

		local btn = Instance.new("TextButton", tab)
		btn.Size = UDim2.new(1, -20, 0, 26)
		btn.Position = UDim2.new(0, 10, 0, 0)
		btn.Text = text
		btn.Font = Enum.Font.Gotham
		btn.TextSize = 14
		btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		btn.AutoButtonColor = false
		btn.ClipsDescendants = true
		btn.TextWrapped = true
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 4)

		btn.MouseEnter:Connect(function()
			btn.BackgroundColor3 = Color3.fromRGB(60, 20, 20)
		end)

		btn.MouseLeave:Connect(function()
			btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		end)

		btn.MouseButton1Click:Connect(function()
			pcall(callback)
		end)
	end

	local isHidden = false
	hideButton.MouseButton1Click:Connect(function()
		local targetSize = isHidden and UDim2.new(0, 550, 0, 375) or UDim2.new(0, 0, 0, 0)
		local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Size = targetSize
		})
		tween:Play()
		isHidden = not isHidden
	end)

	return Window
end
