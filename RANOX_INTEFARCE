local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local RANOX = {}

function RANOX:CreateWindow(config)
    local Window = {}

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RANOX_UI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("TextButton")
    mainFrame.Size = UDim2.new(0, 550, 0, 375)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.Text = ""
    mainFrame.AutoButtonColor = false
    mainFrame.ClipsDescendants = true
    mainFrame.Draggable = true
    mainFrame.Active = true
    mainFrame.Parent = screenGui
    Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 4)

    local stroke = Instance.new("UIStroke", mainFrame)
    stroke.Color = Color3.fromRGB(60, 0, 0)
    stroke.Thickness = 1.5
    stroke.Transparency = 0.3

    local gradient = Instance.new("UIGradient", mainFrame)
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30,30,30)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20,20,20))
    }

    local title = Instance.new("TextLabel", mainFrame)
    title.Size = UDim2.new(1, -50, 0, 25)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = config.Title or "RANOX Hub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamSemibold
    title.TextSize = 16
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextYAlignment = Enum.TextYAlignment.Center
    title.ClipsDescendants = true

    local hideButton = Instance.new("TextButton", mainFrame)
    hideButton.Size = UDim2.new(0, 25, 0, 25)
    hideButton.Position = UDim2.new(1, -30, 0, 0)
    hideButton.Text = "-"
    hideButton.Font = Enum.Font.GothamBold
    hideButton.TextSize = 18
    hideButton.TextColor3 = Color3.fromRGB(255, 80, 80)
    hideButton.BackgroundTransparency = 1
    hideButton.AutoButtonColor = false

    local line = Instance.new("Frame", mainFrame)
    line.Size = UDim2.new(1, 0, 0, 1)
    line.Position = UDim2.new(0, 0, 0, 25)
    line.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    line.BorderSizePixel = 0

    local sidebar = Instance.new("ScrollingFrame", mainFrame)
sidebar.Size = UDim2.new(0, 89, 1, -25)
sidebar.Position = UDim2.new(0, 0, 0, 25)
sidebar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
sidebar.CanvasSize = UDim2.new(0, 0, 0, 0)
sidebar.ScrollBarThickness = 2
sidebar.BorderSizePixel = 0
sidebar.AutomaticCanvasSize = Enum.AutomaticSize.Y
sidebar.ScrollingDirection = Enum.ScrollingDirection.Y
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 3)

local sidebarLayout = Instance.new("UIListLayout", sidebar)
sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
sidebarLayout.Padding = UDim.new(0, 1)

local tabButtons = {}
local pages = {}
local selectedTab = nil

local scrollHolder = Instance.new("ScrollingFrame", mainFrame)
scrollHolder.Size = UDim2.new(1, -99, 1, -35)
scrollHolder.Position = UDim2.new(0, 94, 0, 30)
scrollHolder.BackgroundTransparency = 1
scrollHolder.BorderSizePixel = 0
scrollHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollHolder.ScrollBarThickness = 0
scrollHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y

local ballButton = Instance.new("ImageButton")
ballButton.Size = UDim2.new(0.05, 0, 0.1, 0)
ballButton.Position = UDim2.new(0.1, 0, 0.9, 0)
ballButton.AnchorPoint = Vector2.new(0.5, 0.5)
ballButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ballButton.Image = "rbxassetid://6337069410"
ballButton.BackgroundTransparency = 0
ballButton.Visible = false
ballButton.Active = true
ballButton.Draggable = true
ballButton.Parent = screenGui

local ballCorner = Instance.new("UICorner")
ballCorner.CornerRadius = UDim.new(0.5, 0)
ballCorner.Parent = ballButton

local function switchTab(name)
    for tabName, frame in pairs(pages) do
        frame.Visible = (tabName == name)
    end
    for tabName, btn in pairs(tabButtons) do
        btn.BackgroundColor3 = (tabName == name) and Color3.fromRGB(40, 0, 0) or Color3.fromRGB(10, 10, 10)
    end
    selectedTab = name
end

function Window:CreateTab(tabName, iconId)
    local tabBtn = Instance.new("TextButton", sidebar)
    tabBtn.Size = UDim2.new(1, 0, 0, 24)
    tabBtn.Text = tabName
    tabBtn.Font = Enum.Font.Gotham
    tabBtn.TextSize = 12
    tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabBtn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
    tabBtn.AutoButtonColor = false
    tabBtn.ClipsDescendants = true
    tabBtn.TextXAlignment = Enum.TextXAlignment.Left
    Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 3)

    if iconId then
        local icon = Instance.new("ImageLabel", tabBtn)
        icon.Size = UDim2.new(0, 16, 0, 16)
        icon.Position = UDim2.new(1, -20, 0.5, -8)
        icon.BackgroundTransparency = 1
        icon.Image = "rbxassetid://" .. tostring(iconId)
    end

    tabButtons[tabName] = tabBtn

    tabBtn.MouseEnter:Connect(function()
        if selectedTab ~= tabName then
            tabBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        end
    end)

    tabBtn.MouseLeave:Connect(function()
        if selectedTab ~= tabName then
            tabBtn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
        end
    end)

    local tabPage = Instance.new("Frame", scrollHolder)
    tabPage.Name = tabName
    tabPage.Size = UDim2.new(1, 0, 0, 1000)
    tabPage.BackgroundTransparency = 1
    tabPage.Visible = false

    local layout = Instance.new("UIListLayout", tabPage)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 8)

    pages[tabName] = tabPage

    tabBtn.MouseButton1Click:Connect(function()
        switchTab(tabName)
    end)

    if not selectedTab then
        switchTab(tabName)
    end
end

    function Window:CreateButton(tabName, text, callback)
        local tab = pages[tabName]
        if not tab then return end

        local btn = Instance.new("TextButton", tab)
        btn.Size = UDim2.new(1, -20, 0, 26)
        btn.Position = UDim2.new(0, 10, 0, 0)
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        btn.AutoButtonColor = false
        btn.ClipsDescendants = true
        btn.TextWrapped = true
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 4)

        btn.MouseEnter:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(60, 20, 20)
        end)

        btn.MouseLeave:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end)

        btn.MouseButton1Click:Connect(function()
            pcall(callback)
        end)
    end

    function Window:CreateToggle(tabName, toggleConfig)
    local tab = pages[tabName]
    if not tab then return end

    local toggleFrame = Instance.new("Frame", tab)
    toggleFrame.Size = UDim2.new(1, -20, 0, 26)
    toggleFrame.Position = UDim2.new(0, 10, 0, 0)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleFrame.ClipsDescendants = true
    Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(0, 4)

    local label = Instance.new("TextLabel", toggleFrame)
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = toggleConfig.Text or "Toggle"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextYAlignment = Enum.TextYAlignment.Center

    local toggleButton = Instance.new("TextButton", toggleFrame)
    toggleButton.Size = UDim2.new(0, 40, 1, 0)
    toggleButton.Position = UDim2.new(1, -45, 0, 0)
    toggleButton.Text = "OFF"
    toggleButton.Font = Enum.Font.Gotham
    toggleButton.TextSize = 14
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    toggleButton.AutoButtonColor = false
    Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 4)

    local isOn = false
    toggleButton.MouseButton1Click:Connect(function()
        isOn = not isOn
        toggleButton.Text = isOn and "ON" or "OFF"
        toggleButton.BackgroundColor3 = isOn and Color3.fromRGB(0, 60, 0) or Color3.fromRGB(60, 0, 0)

        if toggleConfig.Callback then
            toggleConfig.Callback(isOn)
        end
    end)
end

    function Window:CreateLabel(tabName, text)
        local tab = pages[tabName]
        if not tab then return end

        local label = Instance.new("TextLabel", tab)
        label.Size = UDim2.new(1, -20, 0, 30)
        label.Position = UDim2.new(0, 10, 0, 0)
        label.Text = text
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.BackgroundTransparency = 1
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.TextYAlignment = Enum.TextYAlignment.Center
    end

    function Window:CreateDropdown(tabName, dropdownConfig)
    local tab = pages[tabName]
    if not tab then return end

    local dropdownFrame = Instance.new("Frame", tab)
    dropdownFrame.Size = UDim2.new(1, -20, 0, 34)
    dropdownFrame.Position = UDim2.new(0, 10, 0, 0)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.ZIndex = 2
    dropdownFrame.Name = "Dropdown_" .. dropdownConfig.Default or "Select"

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 6)
    uiCorner.Parent = dropdownFrame

    local selectedLabel = Instance.new("TextLabel", dropdownFrame)
    selectedLabel.Size = UDim2.new(1, -34, 1, 0)
    selectedLabel.Position = UDim2.new(0, 10, 0, 0)
    selectedLabel.BackgroundTransparency = 1
    selectedLabel.Text = dropdownConfig.Default or "Select Option"
    selectedLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
    selectedLabel.Font = Enum.Font.GothamSemibold
    selectedLabel.TextSize = 14
    selectedLabel.TextXAlignment = Enum.TextXAlignment.Left
    selectedLabel.ZIndex = 3

    local arrowIcon = Instance.new("TextLabel", dropdownFrame)
    arrowIcon.Size = UDim2.new(0, 16, 0, 16)
    arrowIcon.Position = UDim2.new(1, -24, 0.5, -8)
    arrowIcon.BackgroundTransparency = 1
    arrowIcon.Text = "˄"
    arrowIcon.TextColor3 = Color3.fromRGB(200, 200, 200)
    arrowIcon.Font = Enum.Font.Gotham
    arrowIcon.TextSize = 14
    arrowIcon.ZIndex = 3

    local toggleButton = Instance.new("TextButton", dropdownFrame)
    toggleButton.Size = UDim2.new(1, 0, 1, 0)
    toggleButton.Position = UDim2.new(0, 0, 0, 0)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = ""
    toggleButton.ZIndex = 4

    local dropdownList = Instance.new("Frame", tab)
    dropdownList.Size = UDim2.new(1, -20, 0, 0)
    dropdownList.Position = UDim2.new(0, 10, 0, dropdownFrame.Position.Y.Offset + 36)
    dropdownList.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    dropdownList.Visible = false
    dropdownList.ClipsDescendants = true
    dropdownList.ZIndex = 5

    local dropdownCorner = Instance.new("UICorner")
    dropdownCorner.CornerRadius = UDim.new(0, 6)
    dropdownCorner.Parent = dropdownList

    local listLayout = Instance.new("UIListLayout", dropdownList)
    listLayout.Padding = UDim.new(0, 3)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder

    local isOpen = false

    toggleButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        dropdownList.Visible = true
        local targetHeight = isOpen and (#dropdownConfig.Options * 30 + 6) or 0
        arrowIcon.Text = isOpen and "˅" or "˄"
        dropdownList:TweenSize(UDim2.new(1, -20, 0, targetHeight), "Out", "Quad", 0.25, true)
        if not isOpen then
            task.delay(0.25, function()
                dropdownList.Visible = false
            end)
        end
    end)

    for _, option in ipairs(dropdownConfig.Options) do
        local optBtn = Instance.new("TextButton", dropdownList)
        optBtn.Size = UDim2.new(1, 0, 0, 30)
        optBtn.Text = option
        optBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
        optBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        optBtn.Font = Enum.Font.Gotham
        optBtn.TextSize = 13
        optBtn.AutoButtonColor = false
        optBtn.ZIndex = 6

        local corner = Instance.new("UICorner", optBtn)
        corner.CornerRadius = UDim.new(0, 4)

        optBtn.MouseEnter:Connect(function()
            optBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
        end)
        optBtn.MouseLeave:Connect(function()
            optBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
        end)

        optBtn.MouseButton1Click:Connect(function()
            selectedLabel.Text = option
            if dropdownConfig.Callback then
                dropdownConfig.Callback(option)
            end
            isOpen = false
            arrowIcon.Text = "˄"
            dropdownList:TweenSize(UDim2.new(1, -20, 0, 0), "Out", "Quad", 0.25, true)
            task.delay(0.25, function()
                dropdownList.Visible = false
            end)
        end)
    end
end

    function Window:CreateSlider(tabName, sliderConfig)
    local tab = pages[tabName]
    if not tab then return end

    local sliderFrame = Instance.new("Frame", tab)
    sliderFrame.Size = UDim2.new(1, -20, 0, 44)
    sliderFrame.Position = UDim2.new(0, 10, 0, 0)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.ZIndex = 2

    local label = Instance.new("TextLabel", sliderFrame)
    label.Size = UDim2.new(1, 0, 0, 18)
    label.Text = sliderConfig.Text or "Slider"
    label.TextColor3 = Color3.fromRGB(230, 230, 230)
    label.Font = Enum.Font.GothamMedium
    label.TextSize = 13
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.ZIndex = 2

    local sliderBar = Instance.new("Frame", sliderFrame)
    sliderBar.Position = UDim2.new(0, 0, 0, 24)
    sliderBar.Size = UDim2.new(1, 0, 0, 10)
    sliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    sliderBar.BorderSizePixel = 0
    sliderBar.ZIndex = 2
    Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(0, 5)

    local shadow = Instance.new("ImageLabel", sliderBar)
    shadow.Size = UDim2.new(1, 6, 1, 6)
    shadow.Position = UDim2.new(0, -3, 0, -3)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageTransparency = 0.6
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.ZIndex = 1

    local fill = Instance.new("Frame", sliderBar)
    fill.Size = UDim2.new(0, 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    fill.BorderSizePixel = 0
    fill.ZIndex = 3
    Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 5)

    local valueLabel = Instance.new("TextLabel", sliderBar)
    valueLabel.Size = UDim2.new(0, 50, 1, 0)
    valueLabel.Position = UDim2.new(1, 5, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Text = tostring(sliderConfig.Default or 0)
    valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueLabel.Font = Enum.Font.Gotham
    valueLabel.TextSize = 12
    valueLabel.TextXAlignment = Enum.TextXAlignment.Left
    valueLabel.ZIndex = 2

    local min = sliderConfig.Min or 0
    local max = sliderConfig.Max or 100
    local value = sliderConfig.Default or min

    local function updateSlider(inputX)
        local barAbsPos = sliderBar.AbsolutePosition.X
        local barWidth = sliderBar.AbsoluteSize.X
        local clamped = math.clamp((inputX - barAbsPos) / barWidth, 0, 1)
        local newValue = math.floor((min + (max - min) * clamped) + 0.5)
        fill:TweenSize(UDim2.new(clamped, 0, 1, 0), "Out", "Quad", 0.1, true)
        valueLabel.Text = tostring(newValue)
        if sliderConfig.Callback then
            sliderConfig.Callback(newValue)
        end
    end

    local dragging = false
    local userInput = game:GetService("UserInputService")

    local function beginDrag(input)
        dragging = true
        updateSlider(input.Position.X)
    end

    local function endDrag()
        dragging = false
    end

    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            beginDrag(input)
        end
    end)

    userInput.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input.Position.X)
        end
    end)

    userInput.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            endDrag()
        end
    end)

    updateSlider(sliderBar.AbsolutePosition.X)
end

    function Window:CreateTextBox(tabName, placeholderText, callback)
        local tab = pages[tabName]
        if not tab then return end

        local textBox = Instance.new("TextBox", tab)
        textBox.Size = UDim2.new(1, -20, 0, 26)
        textBox.Position = UDim2.new(0, 10, 0, 0)
        textBox.PlaceholderText = placeholderText or "Enter text"
        textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        textBox.Font = Enum.Font.Gotham
        textBox.TextSize = 14
        textBox.ClearTextOnFocus = false
        Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 4)

        textBox.FocusLost:Connect(function(enterPressed)
            if enterPressed and callback then
                callback(textBox.Text)
            end
        end)
    end

    local isHidden = false
    hideButton.MouseButton1Click:Connect(function()
        local targetSize = isHidden and UDim2.new(0, 550, 0, 375) or UDim2.new(0, 0, 0, 0)
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = targetSize
        })
        tween:Play()

        isHidden = not isHidden
        ballButton.Visible = isHidden
    end)

    ballButton.MouseButton1Click:Connect(function()
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 550, 0, 375)
        })
        tween:Play()
        isHidden = false
        ballButton.Visible = false
    end)

    return Window
end

return RANOX
