local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local RANOX = {}

function RANOX:CreateWindow(config)
    local Window = {}

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RANOX_UI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.DisplayOrder = 99e99
    screenGui.Parent = game:GetService("CoreGui")

    local mainFrame = Instance.new("TextButton")
    mainFrame.Size = UDim2.new(0, 575, 0, 375)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    mainFrame.BackgroundTransparency = 0.05
    mainFrame.Text = ""
    mainFrame.AutoButtonColor = false
    mainFrame.ClipsDescendants = true
    mainFrame.Draggable = true
    mainFrame.Active = true
    mainFrame.Parent = screenGui
    Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 4)

local stroke = Instance.new("UIStroke")
stroke.Thickness = 1.5
stroke.Transparency = 0.3
stroke.Name = "MainStroke"
stroke.Parent = mainFrame

local gradient = Instance.new("UIGradient")
gradient.Name = "MainGradient"
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
}
gradient.Parent = mainFrame

local function AtualizarCorInterface(corStroke, corGradiente1, corGradiente2)
    stroke.Color = corStroke
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, corGradiente1),
        ColorSequenceKeypoint.new(1, corGradiente2)
    }
end

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, -50, 0, 25)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = config.Title or "RANOX Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamSemibold
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextYAlignment = Enum.TextYAlignment.Center
title.ClipsDescendants = true

local subtitle = Instance.new("TextLabel", mainFrame)
subtitle.BackgroundTransparency = 1
subtitle.Text = config.Subtitle or "v1.0"
subtitle.TextColor3 = Color3.fromRGB(140, 140, 140)
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 8
subtitle.TextXAlignment = Enum.TextXAlignment.Left
subtitle.TextYAlignment = Enum.TextYAlignment.Center
subtitle.Size = UDim2.new(0, 100, 0, 25)

task.defer(function()
    local textWidth = title.TextBounds.X
    subtitle.Position = UDim2.new(0, 10 + textWidth + 6, 0, 0)
end)

    local hideButton = Instance.new("ImageButton", mainFrame)
    hideButton.Size = UDim2.new(0, 25, 0, 25)
    hideButton.Position = UDim2.new(1, -30, 0, 0)
    hideButton.Image = "rbxassetid://6035047409"
    hideButton.BackgroundTransparency = 1
    hideButton.AutoButtonColor = false

    local line = Instance.new("Frame", mainFrame)
    line.Size = UDim2.new(1, 0, 0, 1)
    line.Position = UDim2.new(0, 0, 0, 25)
    line.BackgroundColor3 = Color3.fromRGB(150, 20, 20)
    line.BorderSizePixel = 0

local sidebar = Instance.new("ScrollingFrame", mainFrame)
sidebar.Size = UDim2.new(0.25, 0, 1, -25)
sidebar.Position = UDim2.new(0, 0, 0, 25)
sidebar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
sidebar.BackgroundTransparency = 1
sidebar.CanvasSize = UDim2.new(0, 0, 0, 0)
sidebar.ScrollBarThickness = 5
sidebar.BorderSizePixel = 0
sidebar.AutomaticCanvasSize = Enum.AutomaticSize.Y
sidebar.ScrollingDirection = Enum.ScrollingDirection.Y
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 3)

local sidebarLayout = Instance.new("UIListLayout", sidebar)
sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
sidebarLayout.Padding = UDim.new(0, 1)

local tabButtons = {}
local pages = {}
local selectedTab = nil

local scrollHolder = Instance.new("ScrollingFrame", mainFrame)
scrollHolder.Position = UDim2.new(0.25, 4, 0, 30)
scrollHolder.Size = UDim2.new(0.75, -8, 1, -35)
scrollHolder.BackgroundTransparency = 1
scrollHolder.BorderSizePixel = 0
scrollHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollHolder.ScrollBarThickness = 0
scrollHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y

local ballButton = Instance.new("ImageButton")
ballButton.Size = UDim2.new(0.05, 0, 0.1, 0)
ballButton.Position = UDim2.new(0.1, 0, 0.9, -150)
ballButton.AnchorPoint = Vector2.new(0.5, 0.5)
ballButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ballButton.Image = "rbxassetid://6337069410"
ballButton.BackgroundTransparency = 0
ballButton.Visible = false
ballButton.Active = true
ballButton.Draggable = true
ballButton.Parent = screenGui

local ballCorner = Instance.new("UICorner")
ballCorner.CornerRadius = UDim.new(0.5, 0)
ballCorner.Parent = ballButton

local function switchTab(name)
	for tabName, frame in pairs(pages) do
		frame.Visible = (tabName == name)
	end
	for tabName, btn in pairs(tabButtons) do
		local marker = btn:FindFirstChild("TabMarker")
		if marker then
			marker.Visible = (tabName == name)
		end
		btn.BackgroundColor3 = (tabName == name) and Color3.fromRGB(30, 30, 30) or Color3.fromRGB(0, 0, 0)
	end
	selectedTab = name
end

function Window:CreateTab(tabName, iconId)
	local tabBtn = Instance.new("TextButton", sidebar)
	tabBtn.Size = UDim2.new(1, 0, 0, 33)
	tabBtn.Text = ""
	tabBtn.Font = Enum.Font.Gotham
	tabBtn.TextSize = 12
	tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	tabBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	tabBtn.AutoButtonColor = false
	tabBtn.ClipsDescendants = true
	tabBtn.TextXAlignment = Enum.TextXAlignment.Left

	local uiCorner = Instance.new("UICorner", tabBtn)
	uiCorner.CornerRadius = UDim.new(0, 6)

	local uiStroke = Instance.new("UIStroke", tabBtn)
	uiStroke.Thickness = 1
	uiStroke.Color = Color3.fromRGB(20, 20, 20)

	local marker = Instance.new("Frame", tabBtn)
	marker.Name = "TabMarker"
	marker.Size = UDim2.new(0, 4, 1, -8)
	marker.Position = UDim2.new(0, 0, 0, 4)
	marker.BackgroundColor3 = Color3.fromRGB(150, 20, 20)
	marker.BorderSizePixel = 0
	marker.Visible = false

	local markerCorner = Instance.new("UICorner", marker)
	markerCorner.CornerRadius = UDim.new(0, 4)

	local label = Instance.new("TextLabel", tabBtn)
	label.BackgroundTransparency = 1
	label.Text = tabName
	label.Font = Enum.Font.Gotham
	label.TextSize = 12
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.TextWrapped = true

	if iconId then
		local icon = Instance.new("ImageLabel", tabBtn)
		icon.Size = UDim2.new(0, 16, 0, 16)
		icon.Position = UDim2.new(0, 6, 0.5, -8)
		icon.BackgroundTransparency = 1
		icon.Image = "rbxassetid://" .. tostring(iconId)
		label.Position = UDim2.new(0, 26, 0, 0)
		label.Size = UDim2.new(1, -28, 1, 0)
	else
		label.Position = UDim2.new(0, 10, 0, 0)
		label.Size = UDim2.new(1, -10, 1, 0)
	end

	tabButtons[tabName] = tabBtn

	tabBtn.MouseEnter:Connect(function()
		if selectedTab ~= tabName then
			TweenService:Create(tabBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(20, 20, 20)}):Play()
		end
	end)

	tabBtn.MouseLeave:Connect(function()
		if selectedTab ~= tabName then
			TweenService:Create(tabBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 0, 0)}):Play()
		end
	end)

	local tabPage = Instance.new("Frame", scrollHolder)
	tabPage.Name = tabName
	tabPage.Size = UDim2.new(1, 0, 0, 1000)
	tabPage.BackgroundTransparency = 1
	tabPage.Visible = false

	local layout = Instance.new("UIListLayout", tabPage)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 8)

	pages[tabName] = tabPage

	tabBtn.MouseButton1Click:Connect(function()
		for name, button in pairs(tabButtons) do
			if name == tabName then
				TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(20, 20, 20)}):Play()
				TweenService:Create(button, TweenInfo.new(0.12), {Size = UDim2.new(1, 0, 0, 37)}):Play()
				task.delay(0.12, function()
					TweenService:Create(button, TweenInfo.new(0.12), {Size = UDim2.new(1, 0, 0, 33)}):Play()
				end)
				button.TabMarker.Visible = true
			else
				TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 0, 0)}):Play()
				button.TabMarker.Visible = false
			end
		end
		switchTab(tabName)
	end)

	if not selectedTab then
		switchTab(tabName)
	end
end

function Window:CreateButton(tabName, text, callback)
        local tab = pages[tabName]
        if not tab then return end

        local btn = Instance.new("TextButton", tab)
        btn.Size = UDim2.new(1, -20, 0, 26)
        btn.Position = UDim2.new(0, 10, 0, 0)
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        btn.AutoButtonColor = false
        btn.ClipsDescendants = true
        btn.TextWrapped = true
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 4)

        btn.MouseEnter:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(75, 20, 20)
        end)

        btn.MouseLeave:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        end)

        btn.MouseButton1Click:Connect(function()
            pcall(callback)
        end)
    end

function Window:CreateCheckbox(tabName, checkboxConfig)
    local tab = pages[tabName]
    if not tab then return end

    local checkboxFrame = Instance.new("Frame", tab)
    checkboxFrame.Size = UDim2.new(1, -20, 0, 43)
    checkboxFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    checkboxFrame.BorderSizePixel = 0
    checkboxFrame.ClipsDescendants = true
    checkboxFrame.LayoutOrder = checkboxConfig.Order or 0
    Instance.new("UICorner", checkboxFrame).CornerRadius = UDim.new(0, 8)

    local title = Instance.new("TextLabel", checkboxFrame)
    title.Text = checkboxConfig.Text or "Checkbox"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.Gotham
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextYAlignment = Enum.TextYAlignment.Top
    title.BackgroundTransparency = 1
    title.Size = UDim2.new(1, -44, 0, 14)
    title.Position = UDim2.new(0, 10, 0, 4)

    local description = Instance.new("TextLabel", checkboxFrame)
    description.Text = checkboxConfig.Description or ""
    description.TextColor3 = Color3.fromRGB(160, 160, 160)
    description.Font = Enum.Font.Gotham
    description.TextSize = 12
    description.TextXAlignment = Enum.TextXAlignment.Left
    description.TextYAlignment = Enum.TextYAlignment.Top
    description.BackgroundTransparency = 1
    description.Size = UDim2.new(1, -44, 0, 12)
    description.Position = UDim2.new(0, 10, 0, 22)

    local box = Instance.new("Frame", checkboxFrame)
    box.Size = UDim2.new(0, 24, 0, 24)
    box.Position = UDim2.new(1, -34, 0.5, -12)
    box.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    box.BorderSizePixel = 0
    Instance.new("UICorner", box).CornerRadius = UDim.new(0, 6)
    local stroke = Instance.new("UIStroke", box)
    stroke.Color = Color3.fromRGB(90, 90, 90)
    stroke.Thickness = 1.3

    local checkmark = Instance.new("TextLabel", box)
    checkmark.Size = UDim2.new(1, -6, 1, -6)
    checkmark.Position = UDim2.new(0, 3, 0, 3)
    checkmark.Text = "✔"
    checkmark.TextColor3 = Color3.fromRGB(255, 255, 255)
    checkmark.TextScaled = true
    checkmark.BackgroundTransparency = 1
    checkmark.Visible = false

    local button = Instance.new("TextButton", checkboxFrame)
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Position = UDim2.new(0, 0, 0, 0)
    button.BackgroundTransparency = 1
    button.Text = ""
    button.AutoButtonColor = false

    local toggled = false
    local running = false
    local tweenService = game:GetService("TweenService")

    local function tweenBoxColor(toColor)
        local tween = tweenService:Create(box, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundColor3 = toColor
        })
        tween:Play()
    end

    button.MouseButton1Click:Connect(function()
        toggled = not toggled
        checkmark.Visible = toggled

        local grow = tweenService:Create(box, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 28, 0, 28)
        })
        local shrink = tweenService:Create(box, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 24, 0, 24)
        })

        if toggled then
            tweenBoxColor(Color3.fromRGB(170, 20, 20))
            grow:Play()
            grow.Completed:Connect(function()
                shrink:Play()
            end)
            running = true
            task.spawn(function()
                while running and toggled do
                    pcall(checkboxConfig.Callback)
                    task.wait()
                end
            end)
        else
            tweenBoxColor(Color3.fromRGB(30, 30, 30))
            running = false
        end

        if checkboxConfig.Callback then
            checkboxConfig.Callback(toggled)
        end
    end)
end

function Window:CreateToggle(tabName, toggleConfig)
    local tab = pages[tabName]
    if not tab then return end

    local toggleFrame = Instance.new("Frame", tab)
    toggleFrame.Size = UDim2.new(1, -20, 0, 40) -- altura reduzida 20%
    toggleFrame.Position = UDim2.new(0, 10, 0, 0)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    toggleFrame.BackgroundTransparency = 0
    toggleFrame.ClipsDescendants = true
    toggleFrame.BorderSizePixel = 0
    Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(0, 8)

    local title = Instance.new("TextLabel", toggleFrame)
    title.Text = toggleConfig.Text or "Toggle"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamMedium
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextYAlignment = Enum.TextYAlignment.Top
    title.BackgroundTransparency = 1
    title.Size = UDim2.new(0, title.TextBounds.X + 20, 0, title.TextBounds.Y + 4) -- Ajusta automaticamente com base no texto
    title.Position = UDim2.new(0, 12, 0, 4)

    local description = Instance.new("TextLabel", toggleFrame)
    description.Text = toggleConfig.Description or "Descrição"
    description.TextColor3 = Color3.fromRGB(170, 170, 170)
    description.Font = Enum.Font.Gotham
    description.TextSize = 12
    description.TextXAlignment = Enum.TextXAlignment.Left
    description.TextYAlignment = Enum.TextYAlignment.Top
    description.BackgroundTransparency = 1
    description.Size = UDim2.new(0, description.TextBounds.X + 20, 0, description.TextBounds.Y + 4) -- Ajusta automaticamente com base no texto
    description.Position = UDim2.new(0, 12, 0, title.Position.Y.Offset + title.Size.Y.Offset + 2)

    local switch = Instance.new("Frame", toggleFrame)
    switch.Size = UDim2.new(0, 40, 0, 22)
    switch.Position = UDim2.new(1, -50, 0.5, -11)
    switch.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    switch.BorderSizePixel = 0
    Instance.new("UICorner", switch).CornerRadius = UDim.new(1, 0)

    local ball = Instance.new("Frame", switch)
    ball.Size = UDim2.new(0, 16, 0, 16)
    ball.Position = UDim2.new(0, 3, 0.5, -8)
    ball.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    ball.BorderSizePixel = 0
    Instance.new("UICorner", ball).CornerRadius = UDim.new(1, 0)

    local toggleButton = Instance.new("TextButton", switch)
    toggleButton.Size = UDim2.new(1, 0, 1, 0)
    toggleButton.Position = UDim2.new(0, 0, 0, 0)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = ""
    toggleButton.AutoButtonColor = false

    local isOn = false
    local tweenService = game:GetService("TweenService")

    toggleButton.MouseButton1Click:Connect(function()
        isOn = not isOn

        local bgColor = isOn and Color3.fromRGB(170, 0, 0) or Color3.fromRGB(40, 40, 40)
        local ballPosition = isOn and UDim2.new(1, -19, 0.5, -8) or UDim2.new(0, 3, 0.5, -8)
        local ballColor = isOn and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)

        tweenService:Create(switch, TweenInfo.new(0.25), {BackgroundColor3 = bgColor}):Play()
        tweenService:Create(ball, TweenInfo.new(0.25), {Position = ballPosition, BackgroundColor3 = ballColor}):Play()

        if toggleConfig.Callback then
            toggleConfig.Callback(isOn)
        end
    end)
end

function Window:CreateLabel(tabName, text)
    local tab = pages[tabName]
    if not tab then return end

    local label = Instance.new("TextLabel", tab)
    label.Size = UDim2.new(1, -20, 0, 28)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Text = "  " .. text:upper()
    label.Font = Enum.Font.GothamBold
    label.TextSize = 16
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextYAlignment = Enum.TextYAlignment.Center

    local underline = Instance.new("Frame", label)
    underline.Size = UDim2.new(1, -20, 0, 1)
    underline.Position = UDim2.new(0, 10, 1, -3)
    underline.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    underline.BorderSizePixel = 0
end

function Window:CreateDropdown(tabName, dropdownConfig)
    local tab = pages[tabName]
    if not tab then return end

    local dropdownFrame = Instance.new("Frame", tab)
    dropdownFrame.Size = UDim2.new(1, -20, 0, 32)
    dropdownFrame.Position = UDim2.new(0, 10, 0, 0)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.ZIndex = 2

    local uiCorner = Instance.new("UICorner", dropdownFrame)
    uiCorner.CornerRadius = UDim.new(0, 8)

    local title = Instance.new("TextLabel", dropdownFrame)
    title.BackgroundTransparency = 1
    title.Text = dropdownConfig.Text or "Select Island"
    title.TextColor3 = Color3.fromRGB(200, 200, 200)
    title.Font = Enum.Font.GothamMedium
    title.TextSize = 15
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextYAlignment = Enum.TextYAlignment.Center
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 12, 0, 0)
    title.ZIndex = 3

    local arrowIcon = Instance.new("TextLabel", dropdownFrame)
    arrowIcon.Size = UDim2.new(0, 14, 0, 14)
    arrowIcon.Position = UDim2.new(1, -24, 0.5, -7)
    arrowIcon.BackgroundTransparency = 1
    arrowIcon.Text = "˄"
    arrowIcon.TextColor3 = Color3.fromRGB(200, 200, 200)
    arrowIcon.Font = Enum.Font.Gotham
    arrowIcon.TextSize = 16
    arrowIcon.ZIndex = 3

    local selectedLabel = Instance.new("TextLabel", dropdownFrame)
    selectedLabel.BackgroundTransparency = 1
    selectedLabel.Text = dropdownConfig.Default or "None"
    selectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    selectedLabel.Font = Enum.Font.GothamBold
    selectedLabel.TextSize = 15
    selectedLabel.TextXAlignment = Enum.TextXAlignment.Right
    selectedLabel.TextYAlignment = Enum.TextYAlignment.Center
    selectedLabel.Size = UDim2.new(0, 0, 1, 0)
    selectedLabel.Position = UDim2.new(1, -arrowIcon.Size.X.Offset - 10, 0, 0)
    selectedLabel.ZIndex = 3

    local function updateSelectedLabelText(text)
        selectedLabel.Text = text
        selectedLabel.Size = UDim2.new(0, selectedLabel.TextBounds.X + 6, 1, 0)
        selectedLabel.Position = UDim2.new(1, -arrowIcon.Size.X.Offset - selectedLabel.Size.X.Offset - 14, 0, 0)
    end

    updateSelectedLabelText(selectedLabel.Text)

    local toggleButton = Instance.new("TextButton", dropdownFrame)
    toggleButton.Size = UDim2.new(1, 0, 1, 0)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = ""
    toggleButton.ZIndex = 4

    local dropdownList = Instance.new("Frame", tab)
    dropdownList.Size = UDim2.new(1, -20, 0, 0)
    dropdownList.Position = UDim2.new(0, 10, 0, dropdownFrame.Position.Y.Offset + 45)
    dropdownList.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    dropdownList.Visible = false
    dropdownList.ClipsDescendants = true
    dropdownList.ZIndex = 5

    local dropdownCorner = Instance.new("UICorner", dropdownList)
    dropdownCorner.CornerRadius = UDim.new(0, 8)

    local listLayout = Instance.new("UIListLayout", dropdownList)
    listLayout.Padding = UDim.new(0, 2)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder

    local isOpen = false
    toggleButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        dropdownList.Visible = true
        local targetHeight = isOpen and (#dropdownConfig.Options * 38 + 8) or 0
        arrowIcon.Text = isOpen and "˅" or "˄"
        dropdownList:TweenSize(UDim2.new(1, -20, 0, targetHeight), "Out", "Quad", 0.25, true)
        if not isOpen then
            task.delay(0.25, function()
                dropdownList.Visible = false
            end)
        end
    end)

    for _, option in ipairs(dropdownConfig.Options) do
        local optBtn = Instance.new("TextButton", dropdownList)
        optBtn.Size = UDim2.new(1, 0, 0, 38)
        optBtn.Text = option
        optBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        optBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        optBtn.Font = Enum.Font.Gotham
        optBtn.TextSize = 14
        optBtn.AutoButtonColor = false
        optBtn.ZIndex = 6

        local corner = Instance.new("UICorner", optBtn)
        corner.CornerRadius = UDim.new(0, 6)

        optBtn.MouseEnter:Connect(function()
            optBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end)
        optBtn.MouseLeave:Connect(function()
            optBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end)

        optBtn.MouseButton1Click:Connect(function()
            updateSelectedLabelText(option)
            if dropdownConfig.Callback then
                dropdownConfig.Callback(option)
            end
            isOpen = false
            arrowIcon.Text = "˄"
            dropdownList:TweenSize(UDim2.new(1, -20, 0, 0), "Out", "Quad", 0.25, true)
            task.delay(0.25, function()
                dropdownList.Visible = false
            end)
        end)
    end
end

function Window:CreateSlider(tabName, sliderConfig)
    local tab = pages[tabName]
    if not tab then return end

    local sliderHolder = Instance.new("Frame", tab)
    sliderHolder.Size = UDim2.new(1, -20, 0, 0)
    sliderHolder.Position = UDim2.new(0, 10, 0, 0)
    sliderHolder.BackgroundTransparency = 1
    sliderHolder.ZIndex = 2
    sliderHolder.AutomaticSize = Enum.AutomaticSize.Y

    local layout = Instance.new("UIListLayout", sliderHolder)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    local bg = Instance.new("Frame", sliderHolder)
    bg.Size = UDim2.new(1, 0, 0, 56)
    bg.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    bg.BorderSizePixel = 0
    bg.ZIndex = 2
    Instance.new("UICorner", bg).CornerRadius = UDim.new(0, 8)

    local border = Instance.new("UIStroke", bg)
    border.Color = Color3.fromRGB(50, 50, 50)
    border.Thickness = 1
    border.Transparency = 0.6

    local title = Instance.new("TextLabel", bg)
    title.Size = UDim2.new(1, -60, 0, 16)
    title.Position = UDim2.new(0, 10, 0, 4)
    title.Text = sliderConfig.Text or "Slider"
    title.TextColor3 = Color3.fromRGB(220, 220, 220)
    title.TextSize = 14
    title.Font = Enum.Font.GothamMedium
    title.BackgroundTransparency = 1
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.ZIndex = 3
    title.TextYAlignment = Enum.TextYAlignment.Center

    local desc = Instance.new("TextLabel", bg)
    desc.Size = UDim2.new(1, -20, 0, 11)
    desc.Position = UDim2.new(0, 10, 0, 22)
    desc.Text = sliderConfig.Description or "Descrição do slider"
    desc.TextColor3 = Color3.fromRGB(170, 170, 170)
    desc.TextSize = 12
    desc.Font = Enum.Font.Gotham
    desc.BackgroundTransparency = 1
    desc.TextXAlignment = Enum.TextXAlignment.Left
    desc.ZIndex = 3
    desc.TextYAlignment = Enum.TextYAlignment.Center

    local valueLabel = Instance.new("TextLabel", bg)
    valueLabel.Size = UDim2.new(0, 50, 0, 16)
    valueLabel.Position = UDim2.new(1, -60, 0, 4)
    valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueLabel.TextSize = 14
    valueLabel.Font = Enum.Font.GothamBold
    valueLabel.BackgroundTransparency = 1
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.ZIndex = 3
    valueLabel.TextYAlignment = Enum.TextYAlignment.Center

    local bar = Instance.new("Frame", bg)
    bar.Size = UDim2.new(1, -20, 0, 8)
    bar.Position = UDim2.new(0, 10, 0, 45)
    bar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    bar.BorderSizePixel = 0
    bar.ZIndex = 2
    Instance.new("UICorner", bar).CornerRadius = UDim.new(1, 0)

    local fill = Instance.new("Frame", bar)
    fill.Size = UDim2.new(0, 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    fill.BorderSizePixel = 0
    fill.ZIndex = 3
    Instance.new("UICorner", fill).CornerRadius = UDim.new(1, 0)

    local neonStroke = Instance.new("UIStroke", fill)
    neonStroke.Thickness = 3
    neonStroke.Transparency = 0.2
    neonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    neonStroke.Color = fill.BackgroundColor3

    task.spawn(function()
        local TweenService = game:GetService("TweenService")
        local state = true
        while fill.Parent do
            local goal = { BackgroundColor3 = state and Color3.fromRGB(195, 20, 20) or Color3.fromRGB(255, 0, 0) }
            local tween = TweenService:Create(fill, TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), goal)
            tween:Play()
            neonStroke.Color = goal.BackgroundColor3
            state = not state
            tween.Completed:Wait()
        end
    end)

    local knob = Instance.new("Frame", bar)
    knob.Size = UDim2.new(0, 16, 0, 16)
    knob.Position = UDim2.new(0, -8, 0.5, -8)
    knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    knob.BorderSizePixel = 0
    knob.ZIndex = 4
    Instance.new("UICorner", knob).CornerRadius = UDim.new(1, 0)
    local knobShadow = Instance.new("UIStroke", knob)
    knobShadow.Color = Color3.fromRGB(100, 100, 100)
    knobShadow.Transparency = 0.3
    knobShadow.Thickness = 1

    local min = sliderConfig.Min or 0
    local max = sliderConfig.Max or 100
    local value = sliderConfig.Default or min

    local function roundToDecimals(num, decimals)
        local mult = 10 ^ decimals
        return math.floor(num * mult + 0.5) / mult
    end

    local function updateSlider(inputX)
        local barAbsPos = bar.AbsolutePosition.X
        local barWidth = bar.AbsoluteSize.X
        local clamped = math.clamp((inputX - barAbsPos) / barWidth, 0, 1)
        local rawValue = min + (max - min) * clamped
        local roundedValue = roundToDecimals(rawValue, 2)
        fill:TweenSize(UDim2.new(clamped, 0, 1, 0), "Out", "Quad", 0.1, true)
        knob:TweenPosition(UDim2.new(clamped, -8, 0.5, -8), "Out", "Quad", 0.1, true)
        valueLabel.Text = tostring(roundedValue)
        if sliderConfig.Callback then
            sliderConfig.Callback(roundedValue)
        end
    end

    local dragging = false
    local userInput = game:GetService("UserInputService")

    local function beginDrag(input)
        dragging = true
        updateSlider(input.Position.X)
    end

    local function endDrag()
        dragging = false
    end

    bar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            beginDrag(input)
        end
    end)

    userInput.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input.Position.X)
        end
    end)

    userInput.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            endDrag()
        end
    end)

    updateSlider(bar.AbsolutePosition.X)
end

function Window:CreateTextBox(tabName, placeholderText, callback)
    local tab = pages[tabName]
    if not tab then return end

    local container = Instance.new("Frame", tab)
    container.Size = UDim2.new(1, -20, 0, 40)
    container.Position = UDim2.new(0, 10, 0, 0)
    container.BackgroundTransparency = 1
    container.ClipsDescendants = true

    local background = Instance.new("Frame", container)
    background.Size = UDim2.new(1, 0, 1, 0)
    background.Position = UDim2.new(0, 0, 0, 0)
    background.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    background.BorderSizePixel = 0
    background.ZIndex = 1
    Instance.new("UICorner", background).CornerRadius = UDim.new(0, 6)

    local highlight = Instance.new("Frame", background)
    highlight.Size = UDim2.new(1, 0, 0, 2)
    highlight.Position = UDim2.new(0, 0, 1, -2)
    highlight.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
    highlight.BackgroundTransparency = 0.5
    highlight.BorderSizePixel = 0
    highlight.Visible = false
    highlight.ZIndex = 2

    task.spawn(function()
        local increasing = true
        while true do
            for i = 1, 100 do
                if increasing then
                    highlight.BackgroundTransparency = 0.1 + (0.8 * (i / 100))
                else
                    highlight.BackgroundTransparency = 0.9 - (0.8 * (i / 100))
                end
                task.wait(0.02)
            end
            increasing = not increasing
        end
    end)

    local placeholder = Instance.new("TextLabel", background)
    placeholder.Size = UDim2.new(1, -20, 0, 14)
    placeholder.Position = UDim2.new(0, 10, 0.5, -7)
    placeholder.BackgroundTransparency = 1
    placeholder.Text = placeholderText or "Escreva aqui"
    placeholder.TextColor3 = Color3.fromRGB(150, 150, 150)
    placeholder.Font = Enum.Font.Gotham
    placeholder.TextSize = 14
    placeholder.TextXAlignment = Enum.TextXAlignment.Left
    placeholder.ZIndex = 2

    local textBox = Instance.new("TextBox", background)
    textBox.Size = UDim2.new(1, -20, 1, 0)
    textBox.Position = UDim2.new(0, 10, 0, 0)
    textBox.BackgroundTransparency = 1
    textBox.Text = ""
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.Font = Enum.Font.Gotham
    textBox.TextSize = 14
    textBox.ClearTextOnFocus = false
    textBox.TextXAlignment = Enum.TextXAlignment.Left
    textBox.TextWrapped = false
    textBox.TextTruncate = Enum.TextTruncate.AtEnd
    textBox.ZIndex = 3

    local shadow = Instance.new("ImageLabel", container)
    shadow.Size = UDim2.new(1, 6, 1, 6)
    shadow.Position = UDim2.new(0, -3, 0, -3)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageTransparency = 0.9
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.ZIndex = 0

    textBox.Focused:Connect(function()
        highlight.Visible = true
        placeholder:TweenPosition(UDim2.new(0, 10, 0, -8), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        placeholder:TweenSize(UDim2.new(1, -20, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        task.delay(0.2, function()
            if textBox:IsFocused() then
                placeholder.Visible = false
            end
        end)
    end)

    textBox.FocusLost:Connect(function(enterPressed)
        highlight.Visible = false
        if textBox.Text == "" then
            placeholder.Visible = true
            placeholder:TweenPosition(UDim2.new(0, 10, 0.5, -7), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
            placeholder:TweenSize(UDim2.new(1, -20, 0, 14), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        end
        if enterPressed and callback then
            callback(textBox.Text)
        end
    end)
end

function Window:CreateColorPicker(tabName, colorConfig)
    local tab = pages[tabName]
    if not tab then return end

    local pickerFrame = Instance.new("Frame", tab)
    pickerFrame.Size = UDim2.new(1, -20, 0, 180)
    pickerFrame.Position = UDim2.new(0, 10, 0, 0)
    pickerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    pickerFrame.ClipsDescendants = true
    Instance.new("UICorner", pickerFrame).CornerRadius = UDim.new(0, 10)

    local topLine = Instance.new("Frame", pickerFrame)
    topLine.Size = UDim2.new(1, 0, 0, 1)
    topLine.Position = UDim2.new(0, 0, 0, 0)
    topLine.BorderSizePixel = 0

    local uiGradient = Instance.new("UIGradient", topLine)
    uiGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0.0, Color3.fromRGB(0, 0, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 0, 0)),
        ColorSequenceKeypoint.new(1.0, Color3.fromRGB(0, 0, 0))
    })

    local toggleButton = Instance.new("TextButton", pickerFrame)
    toggleButton.Size = UDim2.new(0, 20, 0, 20)
    toggleButton.Position = UDim2.new(1, -30, 0, 5)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = "▼"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.TextSize = 16

    local label = Instance.new("TextLabel", pickerFrame)
    label.Size = UDim2.new(1, -60, 0, 26)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = colorConfig.Text or "Escolha uma cor"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left

    local container = Instance.new("Frame", pickerFrame)
    container.Size = UDim2.new(1, 0, 0, 150)
    container.Position = UDim2.new(0, 0, 0, 30)
    container.BackgroundTransparency = 1
    container.Name = "Container"

    local colorDisplay = Instance.new("Frame", container)
    colorDisplay.Size = UDim2.new(1, -20, 0, 30)
    colorDisplay.Position = UDim2.new(0, 10, 0, 0)
    colorDisplay.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    Instance.new("UICorner", colorDisplay).CornerRadius = UDim.new(0, 10)

    local function createGradientBar(parent, position, height, colorType)
        local bar = Instance.new("TextButton", parent)
        bar.Size = UDim2.new(0.7, 0, 0, height)
        bar.Position = position
        bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        bar.AutoButtonColor = false
        bar.Text = ""
        Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 10)

        local gradient = Instance.new("UIGradient", bar)
        if colorType == "Hue" then
            gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),
                ColorSequenceKeypoint.new(0.16, Color3.fromRGB(255, 255, 0)),
                ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
                ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),
                ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 0, 255)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0)),
            })
        elseif colorType == "Brightness" then
            gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 0, 0))
            })
        end

        return bar
    end

    local hueSlider = createGradientBar(container, UDim2.new(0, 10, 0, 40), 20, "Hue")
    local brightnessSlider = createGradientBar(container, UDim2.new(0, 10, 0, 70), 20, "Brightness")

    local hueMarker = Instance.new("Frame", hueSlider)
    hueMarker.Size = UDim2.new(0, 6, 0, 26)
    hueMarker.AnchorPoint = Vector2.new(0.5, 0.5)
    hueMarker.Position = UDim2.new(0, 0, 0.5, 0)
    hueMarker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", hueMarker).CornerRadius = UDim.new(1, 0)

    local brightnessMarker = Instance.new("Frame", brightnessSlider)
    brightnessMarker.Size = UDim2.new(0, 6, 0, 26)
    brightnessMarker.AnchorPoint = Vector2.new(0.5, 0.5)
    brightnessMarker.Position = UDim2.new(1, 0, 0.5, 0)
    brightnessMarker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", brightnessMarker).CornerRadius = UDim.new(1, 0)

    local rgbBox = Instance.new("TextBox", container)
    rgbBox.Size = UDim2.new(0.25, 0, 0, 20)
    rgbBox.Position = UDim2.new(0.75, 15, 0, 40)
    rgbBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    rgbBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    rgbBox.Font = Enum.Font.Gotham
    rgbBox.TextSize = 12
    rgbBox.Text = "0.255.255"
    Instance.new("UICorner", rgbBox).CornerRadius = UDim.new(0, 6)

    local brightnessBox = Instance.new("TextBox", container)
    brightnessBox.Size = UDim2.new(0.25, 0, 0, 20)
    brightnessBox.Position = UDim2.new(0.75, 15, 0, 70)
    brightnessBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    brightnessBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    brightnessBox.Font = Enum.Font.Gotham
    brightnessBox.TextSize = 12
    brightnessBox.Text = "255"
    Instance.new("UICorner", brightnessBox).CornerRadius = UDim.new(0, 6)

    local function applyColorFromBox()
        local r, g, b = rgbBox.Text:match("(%d+)%.(%d+)%.(%d+)")
        local brightness = tonumber(brightnessBox.Text)
        r, g, b = tonumber(r), tonumber(g), tonumber(b)
        brightness = math.clamp(brightness or 255, 0, 255)
        if r and g and b then
            local adjusted = Color3.fromRGB(
                math.clamp(r * brightness / 255, 0, 255),
                math.clamp(g * brightness / 255, 0, 255),
                math.clamp(b * brightness / 255, 0, 255)
            )
            colorDisplay.BackgroundColor3 = adjusted
            if colorConfig.Callback then
                colorConfig.Callback(adjusted)
            end
        end
    end

    local UserInputService = game:GetService("UserInputService")

    local function enableDragging(slider, marker, isHue)
        local dragging = false
        local function update(input)
            local relX = math.clamp(input.Position.X - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
            local percent = relX / slider.AbsoluteSize.X
            marker.Position = UDim2.new(percent, 0, 0.5, 0)
            if isHue then
                local color = Color3.fromHSV(percent, 1, 1)
                rgbBox.Text = math.floor(color.R * 255) .. "." .. math.floor(color.G * 255) .. "." .. math.floor(color.B * 255)
            else
                brightnessBox.Text = tostring(math.floor(255 * (1 - percent)))
            end
            applyColorFromBox()
        end
        slider.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                update(input)
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                update(input)
            end
        end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)
    end

    enableDragging(hueSlider, hueMarker, true)
    enableDragging(brightnessSlider, brightnessMarker, false)

    rgbBox.FocusLost:Connect(applyColorFromBox)
    brightnessBox.FocusLost:Connect(applyColorFromBox)

    local opened = true
    toggleButton.MouseButton1Click:Connect(function()
        opened = not opened
        toggleButton.Text = opened and "▼" or "▲"
        local goalSize = opened and 180 or 30
        local goalContentSize = opened and 150 or 0
        game:GetService("TweenService"):Create(pickerFrame, TweenInfo.new(0.3), {Size = UDim2.new(1, -20, 0, goalSize)}):Play()
        game:GetService("TweenService"):Create(container, TweenInfo.new(0.3), {Size = UDim2.new(1, 0, 0, goalContentSize)}):Play()
    end)

    applyColorFromBox()

    local randomColorToggle = Instance.new("TextButton", container)
    randomColorToggle.Size = UDim2.new(1, -20, 0, 26)
    randomColorToggle.Position = UDim2.new(0, 10, 0, 100)
    randomColorToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    randomColorToggle.Text = "COR RGB ALEATÓRIA [DESATIVADO]"
    randomColorToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    randomColorToggle.Font = Enum.Font.Gotham
    randomColorToggle.TextSize = 12
    Instance.new("UICorner", randomColorToggle).CornerRadius = UDim.new(0, 6)

    local randomColorEnabled = false
    local TweenService = game:GetService("TweenService")

    task.spawn(function()
        while true do
            if randomColorEnabled then
                local randomColor = Color3.fromRGB(math.random(0,255), math.random(0,255), math.random(0,255))
                TweenService:Create(colorDisplay, TweenInfo.new(0.5), {BackgroundColor3 = randomColor}):Play()
                if colorConfig.Callback then
                    colorConfig.Callback(randomColor)
                end
            end
            task.wait(0.6)
        end
    end)

    randomColorToggle.MouseButton1Click:Connect(function()
        randomColorEnabled = not randomColorEnabled
        randomColorToggle.Text = randomColorEnabled and "COR RGB ALEATÓRIA [ATIVADO]" or "COR RGB ALEATÓRIA [DESATIVADO]"
    end)
end

function Window:CreateSwitch(tabName, switchConfig)
    local tab = pages[tabName]
    if not tab then return end

    local holder = Instance.new("Frame", tab)
    holder.Size = UDim2.new(1, -20, 0, 55)
    holder.Position = UDim2.new(0, 10, 0, 0)
    holder.BackgroundTransparency = 1

    local label = Instance.new("TextLabel", holder)
    label.Size = UDim2.new(0.6, 0, 1, -10)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = switchConfig.Text or "Switch"
    label.Font = Enum.Font.GothamBold
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 15
    label.TextXAlignment = Enum.TextXAlignment.Left

    local switch = Instance.new("Frame", holder)
    switch.Size = UDim2.new(0, 60, 0, 26)
    switch.Position = UDim2.new(1, -65, 0.5, -13)
    switch.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    switch.BorderSizePixel = 0
    switch.BackgroundTransparency = 0.05
    Instance.new("UICorner", switch).CornerRadius = UDim.new(1, 0)

    local glow = Instance.new("UIStroke", switch)
    glow.Thickness = 1.3
    glow.Color = Color3.fromRGB(255, 0, 0)
    glow.Transparency = 1

    local circle = Instance.new("Frame", switch)
    circle.Size = UDim2.new(0, 22, 0, 22)
    circle.Position = UDim2.new(0, 3, 0.5, -11)
    circle.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    circle.BorderSizePixel = 0
    Instance.new("UICorner", circle).CornerRadius = UDim.new(1, 0)

    local stateLabel = Instance.new("TextLabel", holder)
    stateLabel.Size = UDim2.new(0, 40, 1, -10)
    stateLabel.Position = UDim2.new(1, -115, 0, 0)
    stateLabel.BackgroundTransparency = 1
    stateLabel.Font = Enum.Font.GothamBold
    stateLabel.TextSize = 14
    stateLabel.TextColor3 = Color3.fromRGB(255, 85, 85)
    stateLabel.Text = "OFF"
    stateLabel.TextXAlignment = Enum.TextXAlignment.Right

    local underline = Instance.new("Frame", holder)
    underline.Size = UDim2.new(1, 0, 0, 1)
    underline.Position = UDim2.new(0, 0, 1, -3)
    underline.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    underline.BorderSizePixel = 0

    local particle = Instance.new("ParticleEmitter", circle)
    particle.Enabled = false
    particle.LightEmission = 1
    particle.Rate = 40
    particle.Lifetime = NumberRange.new(0.4, 0.5)
    particle.Speed = NumberRange.new(1, 2)
    particle.Size = NumberSequence.new(0.2)
    particle.Rotation = NumberRange.new(0, 360)
    particle.RotSpeed = NumberRange.new(-180, 180)
    particle.Texture = "rbxassetid://296874871"
    particle.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 20, 20))
    }

    local state = false

    local function toggleSwitch()
        state = not state
        local goalPos = state and UDim2.new(1, -25, 0.5, -11) or UDim2.new(0, 3, 0.5, -11)
        local bgColor = state and Color3.fromRGB(200, 20, 20) or Color3.fromRGB(50, 50, 50)
        local circleColor = state and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
        local textColor = state and Color3.fromRGB(0, 255, 100) or Color3.fromRGB(255, 85, 85)
        local glowTrans = state and 0 or 1

        game:GetService("TweenService"):Create(circle, TweenInfo.new(0.25), {Position = goalPos}):Play()
        game:GetService("TweenService"):Create(switch, TweenInfo.new(0.25), {BackgroundColor3 = bgColor}):Play()
        game:GetService("TweenService"):Create(circle, TweenInfo.new(0.25), {BackgroundColor3 = circleColor}):Play()
        game:GetService("TweenService"):Create(stateLabel, TweenInfo.new(0.25), {TextColor3 = textColor}):Play()
        game:GetService("TweenService"):Create(glow, TweenInfo.new(0.25), {Transparency = glowTrans}):Play()

        stateLabel.Text = state and "ON" or "OFF"

        particle.Enabled = true
        task.delay(0.2, function()
            particle.Enabled = false
        end)

        if switchConfig.Callback then
            switchConfig.Callback(state)
        end
    end

    switch.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            toggleSwitch()
        end
    end)

    switch.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(glow, TweenInfo.new(0.2), {Transparency = state and 0 or 0.5}):Play()
    end)

    switch.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(glow, TweenInfo.new(0.2), {Transparency = 1}):Play()
    end)
end

function Window:CreateLine(tabName, color)
    local tab = pages[tabName]
    if not tab then return end

    local line = Instance.new("Frame", tab)
    line.Size = UDim2.new(1, -20, 0, 1)
    line.Position = UDim2.new(0, 10, 0, 0)
    line.BackgroundColor3 = color or Color3.fromRGB(255, 255, 255)
    line.BorderSizePixel = 0
end

function Window:NotifyCustom(title, text, iconId)
    local player = game.Players.LocalPlayer
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NotifyCustom"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local blur = Instance.new("BlurEffect")
    blur.Size = 0
    blur.Parent = game.Lighting
    game:GetService("TweenService"):Create(blur, TweenInfo.new(0.4, Enum.EasingStyle.Quint), { Size = 6 }):Play()

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 280, 0, 100)
    frame.Position = UDim2.new(1, 320, 1, -200)
    frame.AnchorPoint = Vector2.new(1, 1)
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    frame.BackgroundTransparency = 0.2
    frame.BorderSizePixel = 1
    frame.BorderColor3 = Color3.fromRGB(150, 20, 20)
    frame.ZIndex = 999999
    frame.Parent = screenGui

    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0, 10)

    local gradient = Instance.new("UIGradient", frame)
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 100)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 0))
    })
    gradient.Rotation = 45
    gradient.Transparency = NumberSequence.new(0.93)

    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.7
    shadow.BackgroundTransparency = 1
    shadow.ZIndex = 999998
    shadow.Parent = frame

    local icon = Instance.new("ImageLabel")
    icon.Size = UDim2.new(0, 48, 0, 48)
    icon.Position = UDim2.new(0, 12, 0, 26)
    icon.Image = "rbxassetid://" .. iconId
    icon.BackgroundTransparency = 1
    icon.ZIndex = 999999
    icon.Parent = frame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -80, 0, 26)
    titleLabel.Position = UDim2.new(0, 70, 0, 15)
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 15
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.BackgroundTransparency = 1
    titleLabel.ZIndex = 999999
    titleLabel.Parent = frame

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -80, 0, 32)
    textLabel.Position = UDim2.new(0, 70, 0, 42)
    textLabel.Text = text
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 12
    textLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    textLabel.TextWrapped = true
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.BackgroundTransparency = 1
    textLabel.ZIndex = 999999
    textLabel.Parent = frame

    frame:TweenPosition(UDim2.new(1, -20, 1, -20), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.4, true)

    task.delay(1.5, function()
        frame:TweenPosition(UDim2.new(1, 320, 1, -200), Enum.EasingDirection.In, Enum.EasingStyle.Quint, 0.4, true)
        task.wait(0.4)
        screenGui:Destroy()
        game:GetService("TweenService"):Create(blur, TweenInfo.new(0.4, Enum.EasingStyle.Quint), { Size = 0 }):Play()
        task.delay(0.4, function() blur:Destroy() end)
    end)
end

function Window:CreatePromoBox(tabName, title, description, imageId, link, channelName)
    local TweenService = game:GetService("TweenService")
    local tab = pages[tabName]
    if not tab then return end

    local box = Instance.new("Frame", tab)
    box.Size = UDim2.new(1, -20, 0, 0)
    box.Position = UDim2.new(0, 10, 0, 0)
    box.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    box.BorderSizePixel = 0
    box.AutomaticSize = Enum.AutomaticSize.Y
    box.ClipsDescendants = true
    local boxCorner = Instance.new("UICorner", box)
    boxCorner.CornerRadius = UDim.new(0, 12)
    local boxStroke = Instance.new("UIStroke", box)
    boxStroke.Color = Color3.fromRGB(60, 0, 0)
    boxStroke.Thickness = 1.5

    local icon = Instance.new("ImageLabel", box)
    icon.Size = UDim2.new(0, 90, 0, 90)
    icon.Position = UDim2.new(0, 10, 0, 10)
    icon.Image = "rbxassetid://" .. tostring(imageId)
    icon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    icon.BorderSizePixel = 0
    icon.ScaleType = Enum.ScaleType.Fit
    local iconCorner = Instance.new("UICorner", icon)
    iconCorner.CornerRadius = UDim.new(0, 8)

    local channelBox = Instance.new("TextBox", box)
    channelBox.Text = channelName or "SEU CANAL AQUI"
    channelBox.Size = UDim2.new(0, 90, 0, 0)
    channelBox.Position = UDim2.new(0, 10, 0, 105)
    channelBox.Font = Enum.Font.GothamBold
    channelBox.TextSize = 12
    channelBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    channelBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    channelBox.BorderSizePixel = 0
    channelBox.ClearTextOnFocus = false
    channelBox.AutomaticSize = Enum.AutomaticSize.Y
    channelBox.TextWrapped = true
    channelBox.TextXAlignment = Enum.TextXAlignment.Center
    channelBox.TextYAlignment = Enum.TextYAlignment.Center
    channelBox.ClipsDescendants = true
    channelBox.TextEditable = false
    local channelCorner = Instance.new("UICorner", channelBox)
    channelCorner.CornerRadius = UDim.new(0, 6)
    local channelStroke = Instance.new("UIStroke", channelBox)
    channelStroke.Color = Color3.fromRGB(175, 0, 0)
    channelStroke.Thickness = 1.2

    local content = Instance.new("Frame", box)
    content.BackgroundTransparency = 1
    content.Position = UDim2.new(0, 110, 0, 10)
    content.Size = UDim2.new(1, -120, 0, 0)
    content.AutomaticSize = Enum.AutomaticSize.Y

    local layout = Instance.new("UIListLayout", content)
    layout.FillDirection = Enum.FillDirection.Vertical
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 6)

    local titleLabel = Instance.new("TextLabel", content)
    titleLabel.Text = "  " .. title:upper()
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 17
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextYAlignment = Enum.TextYAlignment.Center

    local underline = Instance.new("Frame", titleLabel)
    underline.Size = UDim2.new(1, -20, 0, 1)
    underline.Position = UDim2.new(0, 10, 1, -3)
    underline.BackgroundColor3 = Color3.fromRGB(90, 0, 0)
    underline.BorderSizePixel = 0

    local buttonHolder = Instance.new("Frame", content)
    buttonHolder.Size = UDim2.new(1, 0, 0, 30)
    buttonHolder.BackgroundColor3 = Color3.fromRGB(70, 0, 0)
    buttonHolder.BorderSizePixel = 0
    buttonHolder.ClipsDescendants = true
    local buttonCorner = Instance.new("UICorner", buttonHolder)
    buttonCorner.CornerRadius = UDim.new(0, 6)
    local buttonStroke = Instance.new("UIStroke", buttonHolder)
    buttonStroke.Color = Color3.fromRGB(120, 0, 0)
    buttonStroke.Thickness = 1.2

    local copyButton = Instance.new("TextButton", buttonHolder)
    copyButton.Text = "COPIAR LINK"
    copyButton.Font = Enum.Font.GothamBold
    copyButton.TextSize = 14
    copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    copyButton.BackgroundTransparency = 1
    copyButton.Size = UDim2.new(1, 0, 1, 0)
    copyButton.ZIndex = 2

    local fillBar = Instance.new("Frame", buttonHolder)
    fillBar.Size = UDim2.new(0, 0, 1, 0)
    fillBar.Position = UDim2.new(0, 0, 0, 0)
    fillBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    fillBar.BorderSizePixel = 0
    fillBar.ZIndex = 1

    local descLabel = Instance.new("TextLabel", content)
    descLabel.Text = description
    descLabel.Font = Enum.Font.Gotham
    descLabel.TextSize = 14
    descLabel.TextColor3 = Color3.fromRGB(210, 210, 210)
    descLabel.BackgroundTransparency = 1
    descLabel.Size = UDim2.new(1, 0, 0, 0)
    descLabel.AutomaticSize = Enum.AutomaticSize.Y
    descLabel.TextWrapped = true
    descLabel.TextXAlignment = Enum.TextXAlignment.Left

    copyButton.MouseButton1Click:Connect(function()
        setclipboard(link)
        fillBar.Size = UDim2.new(0, 0, 1, 0)
        fillBar:TweenSize(UDim2.new(1, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 0.4, true)
    end)

    return {
        MainFrame = box,
        ChannelBox = channelBox,
        DescriptionLabel = descLabel,
        CopyButton = copyButton
    }
end

function Window:CreateThemeBoxes(tabName, mainFrame)
    local tab = pages[tabName]
    if not tab then return end

    local container = Instance.new("Frame", tab)
    container.Size = UDim2.new(1, -20, 0, 0)
    container.Position = UDim2.new(0, 10, 0, 0)
    container.BackgroundTransparency = 1
    container.AutomaticSize = Enum.AutomaticSize.Y

    local layout = Instance.new("UIListLayout", container)
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 10)
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    local colors = {
        {Color3.fromRGB(255,255,0), Color3.fromRGB(0,0,0)},
        {Color3.fromRGB(0,0,255), Color3.fromRGB(128,0,255)},
        {Color3.fromRGB(0,255,0), Color3.fromRGB(0,255,255)},
        {Color3.fromRGB(255,0,0), Color3.fromRGB(255,255,0)},
        {Color3.fromRGB(212,175,55), Color3.fromRGB(192,192,192)},
        {Color3.fromRGB(128,0,255), Color3.fromRGB(255,128,0)},
        {Color3.fromRGB(0,0,255), Color3.fromRGB(255,0,0)},
        {Color3.fromRGB(255,105,180), Color3.fromRGB(255,215,0)},
        {Color3.fromRGB(255,255,255), Color3.fromRGB(0,0,0)},
        {Color3.fromRGB(255,255,0), Color3.fromRGB(0,255,255)},
        {Color3.fromRGB(0, 255, 128), Color3.fromRGB(0, 64, 64)},
        {Color3.fromRGB(255, 0, 255), Color3.fromRGB(128, 0, 128)},
        {Color3.fromRGB(0, 255, 255), Color3.fromRGB(0, 128, 255)},
        {Color3.fromRGB(255, 69, 0), Color3.fromRGB(255, 140, 0)},
        {Color3.fromRGB(255, 20, 147), Color3.fromRGB(148, 0, 211)},
        {Color3.fromRGB(173, 216, 230), Color3.fromRGB(25, 25, 112)},
        {Color3.fromRGB(144, 238, 144), Color3.fromRGB(0, 100, 0)},
        {Color3.fromRGB(255, 248, 220), Color3.fromRGB(139, 69, 19)},
        {Color3.fromRGB(255, 255, 224), Color3.fromRGB(0, 0, 128)},
        {Color3.fromRGB(255, 255, 255), Color3.fromRGB(140, 140, 140)},
        {Color3.fromRGB(0, 0, 0), Color3.fromRGB(0, 0, 0)}
    }

    local inicial = colors[#colors]
    AtualizarCorInterface(inicial[1], inicial[1], inicial[2])

    local function createColorBox(titleText, labelText, mode)
        local box = Instance.new("Frame")
        box.Size = UDim2.new(0.5, -15, 0, 0)
        box.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        box.BorderSizePixel = 0
        box.AutomaticSize = Enum.AutomaticSize.Y
        box.ClipsDescendants = true
        box.Parent = container

        Instance.new("UICorner", box).CornerRadius = UDim.new(0, 12)
        local stroke = Instance.new("UIStroke", box)
        stroke.Color = Color3.fromRGB(60, 0, 0)
        stroke.Thickness = 1.5
        stroke.Transparency = 0.3

        local titleLabel = Instance.new("TextLabel", box)
        titleLabel.Text = titleText
        titleLabel.Font = Enum.Font.GothamBold
        titleLabel.TextSize = 17
        titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Size = UDim2.new(1, -20, 0, 30)
        titleLabel.Position = UDim2.new(0, 10, 0, 10)
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left

        local label = Instance.new("TextLabel", box)
        label.Text = labelText
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.TextColor3 = Color3.fromRGB(180, 180, 180)
        label.BackgroundTransparency = 1
        label.Size = UDim2.new(1, -20, 0, 20)
        label.Position = UDim2.new(0, 10, 0, 40)
        label.TextXAlignment = Enum.TextXAlignment.Left

        local content = Instance.new("Frame", box)
        content.BackgroundTransparency = 1
        content.Position = UDim2.new(0, 10, 0, 70)
        content.Size = UDim2.new(1, -20, 0, 0)
        content.AutomaticSize = Enum.AutomaticSize.Y

        local grid = Instance.new("UIGridLayout", content)
        grid.CellSize = UDim2.new(0, 40, 0, 40)
        grid.CellPadding = UDim2.new(0, 10, 0, 10)
        grid.FillDirectionMaxCells = 3
        grid.FillDirection = Enum.FillDirection.Horizontal
        grid.SortOrder = Enum.SortOrder.LayoutOrder

        for _, pair in ipairs(colors) do
            local square = Instance.new("Frame", content)
            square.BackgroundColor3 = pair[1]
            square.BorderSizePixel = 0
            square.Size = UDim2.new(0, 40, 0, 40)
            Instance.new("UICorner", square).CornerRadius = UDim.new(0, 6)

            local s = Instance.new("UIStroke", square)
            s.Color = Color3.fromRGB(60, 0, 0)
            s.Thickness = 1.5
            s.Transparency = 0.3

            local g = Instance.new("UIGradient", square)
            g.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, pair[1]),
                ColorSequenceKeypoint.new(1, pair[2])
            }

            local button = Instance.new("TextButton", square)
            button.BackgroundTransparency = 1
            button.Size = UDim2.new(1, 0, 1, 0)
            button.Text = ""
            button.AutoButtonColor = false

            button.MouseButton1Click:Connect(function()
                if mode == "interface" then
                    AtualizarCorInterface(pair[1], pair[1], pair[2])
                elseif mode == "titulo" then
                    title.TextColor3 = pair[1]
                    subtitle.TextColor3 = pair[2]
                end
            end)
        end

        local colorInputBox = Instance.new("TextBox", box)
colorInputBox.Text = ""
colorInputBox.Size = UDim2.new(1, -20, 0, 30)
colorInputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
colorInputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
colorInputBox.TextSize = 14
colorInputBox.PlaceholderText = "(ex: 255.0.0/0.0.0)"
colorInputBox.ClearTextOnFocus = false
colorInputBox.AutomaticSize = Enum.AutomaticSize.X
colorInputBox.Position = UDim2.new(0, 10, 0, 0)
colorInputBox.LayoutOrder = 999

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 6)
corner.Parent = colorInputBox

        local layoutForInput = Instance.new("UIListLayout", box)
        layoutForInput.SortOrder = Enum.SortOrder.LayoutOrder
        layoutForInput.Padding = UDim.new(0, 10)

        colorInputBox.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                local colorText = colorInputBox.Text
                local colorsInput = string.split(colorText, "/")
                if #colorsInput == 2 then
                    local color1 = string.split(colorsInput[1], ".")
                    local color2 = string.split(colorsInput[2], ".")
                    if #color1 == 3 and #color2 == 3 then
                        local r1, g1, b1 = tonumber(color1[1]), tonumber(color1[2]), tonumber(color1[3])
                        local r2, g2, b2 = tonumber(color2[1]), tonumber(color2[2]), tonumber(color2[3])
                        if r1 and g1 and b1 and r2 and g2 and b2 then
                            local newColor1 = Color3.fromRGB(r1, g1, b1)
                            local newColor2 = Color3.fromRGB(r2, g2, b2)
                            if mode == "interface" then
                                AtualizarCorInterface(newColor1, newColor1, newColor2)
                            elseif mode == "titulo" then
                                title.TextColor3 = newColor1
                                subtitle.TextColor3 = newColor2
                            end
                        end
                    end
                end
            end
        end)

        return box
    end

    createColorBox("COR DA INTERFACE", "Quadrados principais", "interface")
    createColorBox("COR DO TÍTULO", "Título e versão", "titulo")

    return container
end

function Window:CreateInfoBox(tabName, title, infoList)
    local tab = pages[tabName]
    if not tab then return end

    local box = Instance.new("Frame", tab)
    box.Size = UDim2.new(1, -20, 0, 0)
    box.Position = UDim2.new(0, 10, 0, 0)
    box.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    box.BorderSizePixel = 0
    box.AutomaticSize = Enum.AutomaticSize.Y
    box.ClipsDescendants = true
    local boxCorner = Instance.new("UICorner", box)
    boxCorner.CornerRadius = UDim.new(0, 12)
    local boxStroke = Instance.new("UIStroke", box)
    boxStroke.Color = Color3.fromRGB(120, 0, 0)
    boxStroke.Thickness = 1.5

    local titleLabel = Instance.new("TextLabel", box)
    titleLabel.Text = "  " .. (title or "INFORMAÇÃO"):upper()
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 17
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Size = UDim2.new(1, -20, 0, 30)
    titleLabel.Position = UDim2.new(0, 10, 0, 10)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextYAlignment = Enum.TextYAlignment.Center

    local underline = Instance.new("Frame", titleLabel)
    underline.Size = UDim2.new(1, -20, 0, 1)
    underline.Position = UDim2.new(0, 10, 1, -3)
    underline.BackgroundColor3 = Color3.fromRGB(90, 0, 0)
    underline.BorderSizePixel = 0

    local content = Instance.new("Frame", box)
    content.BackgroundTransparency = 1
    content.Position = UDim2.new(0, 10, 0, 50)
    content.Size = UDim2.new(1, -20, 0, 0)
    content.AutomaticSize = Enum.AutomaticSize.Y

    local layout = Instance.new("UIListLayout", content)
    layout.FillDirection = Enum.FillDirection.Vertical
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 6)

    for i, text in ipairs(infoList) do
        local itemFrame = Instance.new("Frame", content)
        itemFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        itemFrame.BorderSizePixel = 0
        itemFrame.AutomaticSize = Enum.AutomaticSize.Y
        itemFrame.Size = UDim2.new(1, 0, 0, 0)
        itemFrame.ClipsDescendants = true
        local itemCorner = Instance.new("UICorner", itemFrame)
        itemCorner.CornerRadius = UDim.new(0, 6)
        local itemStroke = Instance.new("UIStroke", itemFrame)
        itemStroke.Color = Color3.fromRGB(120, 0, 0)
        itemStroke.Thickness = 1

        local numberLabel = Instance.new("TextLabel", itemFrame)
        numberLabel.Text = tostring(i) .. "."
        numberLabel.Font = Enum.Font.GothamBold
        numberLabel.TextSize = 14
        numberLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        numberLabel.BackgroundTransparency = 1
        numberLabel.Size = UDim2.new(0, 30, 1, 0)
        numberLabel.Position = UDim2.new(0, 10, 0, 0)
        numberLabel.TextXAlignment = Enum.TextXAlignment.Left
        numberLabel.TextYAlignment = Enum.TextYAlignment.Top

        local descLabel = Instance.new("TextLabel", itemFrame)
        descLabel.Text = text
        descLabel.Font = Enum.Font.Gotham
        descLabel.TextSize = 14
        descLabel.TextColor3 = Color3.fromRGB(210, 210, 210)
        descLabel.BackgroundTransparency = 1
        descLabel.Position = UDim2.new(0, 40, 0, 5)
        descLabel.Size = UDim2.new(1, -50, 0, 0)
        descLabel.AutomaticSize = Enum.AutomaticSize.Y
        descLabel.TextWrapped = true
        descLabel.TextXAlignment = Enum.TextXAlignment.Left
        descLabel.TextYAlignment = Enum.TextYAlignment.Top
    end

    return {
        MainFrame = box,
        TitleLabel = titleLabel,
        ContentFrame = content
    }
end

local eventBuffer = {}
local protectedRemotes = {}
local isHooked = false
local serialize = function(v)
    local t = typeof(v)
    if t == "string" then return ("%q"):format(v)
    elseif t == "number" then return tostring(v)
    elseif t == "boolean" then return v and "true" or "false"
    elseif t == "Vector3" then return ("Vector3.new(%s, %s, %s)"):format(v.X, v.Y, v.Z)
    elseif t == "Color3" then return ("Color3.new(%s, %s, %s)"):format(v.R, v.G, v.B)
    elseif t == "CFrame" then return ("CFrame.new(%s, %s, %s)"):format(v.X, v.Y, v.Z)
    elseif t == "Instance" then return v:GetFullName()
    elseif t == "table" then 
        local parts = {}
        for k, val in pairs(v) do
            table.insert(parts, ("[%s] = %s"):format(serialize(k), serialize(val))
        end
        return "{" .. table.concat(parts, ", ") .. "}"
    else return "nil" end
end

local buildScript = function(remote, args)
    local method = remote:IsA("RemoteEvent") and "FireServer" or "InvokeServer"
    local argStrings = {}
    for i, v in ipairs(args) do table.insert(argStrings, serialize(v)) end
    return ([[
local args = {%s}
local remote = game:GetService("ReplicatedStorage"):FindFirstChild("%s")
if remote then remote:%s(unpack(args)) else warn("Remote not found") end]]):format(
        table.concat(argStrings, ", "), remote.Name, method)
end

local function hookEvents()
    if isHooked then return end
    local oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        if (method == "FireServer" or method == "InvokeServer") and not checkcaller() then
            table.insert(eventBuffer, { 
                remote = self, 
                args = args,
                script = buildScript(self, args)
            })
        end
        return oldNamecall(self, ...)
    end)
    isHooked = true
end

function Window:CreateEventLogBox(tabName)
    local tab = pages[tabName]
    if not tab then return end

    local container = Instance.new("Frame", tab)
    container.Size = UDim2.new(1, -20, 1, -40)
    container.Position = UDim2.new(0, 10, 0, 30)
    container.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    container.BorderSizePixel = 0
    container.ClipsDescendants = true

    local shadow = Instance.new("ImageLabel", container)
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.BackgroundTransparency = 1
    shadow.ZIndex = 0

    local controlPanel = Instance.new("Frame", container)
    controlPanel.Size = UDim2.new(1, 0, 0, 40)
    controlPanel.Position = UDim2.new(0, 0, 0, 0)
    controlPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    controlPanel.BorderSizePixel = 0

    local title = Instance.new("TextLabel", controlPanel)
    title.Size = UDim2.new(0.3, 0, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.Text = "EVENT MONITOR"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.TextColor3 = Color3.fromRGB(220, 220, 255)
    title.BackgroundTransparency = 1
    title.TextXAlignment = Enum.TextXAlignment.Left

    local eventCount = Instance.new("TextLabel", controlPanel)
    eventCount.Size = UDim2.new(0.2, 0, 1, 0)
    eventCount.Position = UDim2.new(0.3, 0, 0, 0)
    eventCount.Text = "Events: 0"
    eventCount.Font = Enum.Font.GothamMedium
    eventCount.TextSize = 14
    eventCount.TextColor3 = Color3.fromRGB(180, 180, 220)
    eventCount.BackgroundTransparency = 1
    eventCount.TextXAlignment = Enum.TextXAlignment.Right

    local copyButton = Instance.new("TextButton", controlPanel)
    copyButton.Size = UDim2.new(0.12, 0, 0.7, 0)
    copyButton.Position = UDim2.new(0.55, 0, 0.15, 0)
    copyButton.Text = "Copy"
    copyButton.Font = Enum.Font.GothamBold
    copyButton.TextSize = 14
    copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    copyButton.BackgroundColor3 = Color3.fromRGB(70, 120, 200)
    copyButton.BorderSizePixel = 0
    copyButton.AutoButtonColor = false
    
    local executeButton = Instance.new("TextButton", controlPanel)
    executeButton.Size = UDim2.new(0.12, 0, 0.7, 0)
    executeButton.Position = UDim2.new(0.68, 0, 0.15, 0)
    executeButton.Text = "Execute"
    executeButton.Font = Enum.Font.GothamBold
    executeButton.TextSize = 14
    executeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    executeButton.BackgroundColor3 = Color3.fromRGB(60, 180, 100)
    executeButton.BorderSizePixel = 0
    executeButton.AutoButtonColor = false
    
    local autoExecuteButton = Instance.new("TextButton", controlPanel)
    autoExecuteButton.Size = UDim2.new(0.12, 0, 0.7, 0)
    autoExecuteButton.Position = UDim2.new(0.81, 0, 0.15, 0)
    autoExecuteButton.Text = "Auto: OFF"
    autoExecuteButton.Font = Enum.Font.GothamBold
    autoExecuteButton.TextSize = 14
    autoExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    autoExecuteButton.BackgroundColor3 = Color3.fromRGB(90, 90, 120)
    autoExecuteButton.BorderSizePixel = 0
    autoExecuteButton.AutoButtonColor = false

    local contentFrame = Instance.new("Frame", container)
    contentFrame.Size = UDim2.new(1, 0, 1, -40)
    contentFrame.Position = UDim2.new(0, 0, 0, 40)
    contentFrame.BackgroundTransparency = 1

    local eventPanel = Instance.new("Frame", contentFrame)
    eventPanel.Size = UDim2.new(0.5, -5, 1, 0)
    eventPanel.Position = UDim2.new(0, 0, 0, 0)
    eventPanel.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    eventPanel.BorderSizePixel = 0

    local eventHeader = Instance.new("TextLabel", eventPanel)
    eventHeader.Size = UDim2.new(1, 0, 0, 30)
    eventHeader.Position = UDim2.new(0, 0, 0, 0)
    eventHeader.Text = "DETECTED EVENTS"
    eventHeader.Font = Enum.Font.GothamBold
    eventHeader.TextSize = 14
    eventHeader.TextColor3 = Color3.fromRGB(200, 200, 255)
    eventHeader.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    eventHeader.BorderSizePixel = 0
    eventHeader.TextXAlignment = Enum.TextXAlignment.Left
    eventHeader.Padding = UDim.new(0, 10)

    local eventList = Instance.new("ScrollingFrame", eventPanel)
    eventList.Size = UDim2.new(1, 0, 1, -30)
    eventList.Position = UDim2.new(0, 0, 0, 30)
    eventList.BackgroundTransparency = 1
    eventList.ScrollBarThickness = 5
    eventList.AutomaticCanvasSize = Enum.AutomaticSize.Y
    eventList.CanvasSize = UDim2.new(0, 0, 0, 0)

    local listLayout = Instance.new("UIListLayout", eventList)
    listLayout.Padding = UDim.new(0, 2)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder

    local scriptPanel = Instance.new("Frame", contentFrame)
    scriptPanel.Size = UDim2.new(0.5, -5, 1, 0)
    scriptPanel.Position = UDim2.new(0.5, 5, 0, 0)
    scriptPanel.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    scriptPanel.BorderSizePixel = 0

    local scriptHeader = Instance.new("TextLabel", scriptPanel)
    scriptHeader.Size = UDim2.new(1, 0, 0, 30)
    scriptHeader.Position = UDim2.new(0, 0, 0, 0)
    scriptHeader.Text = "GENERATED SCRIPT"
    scriptHeader.Font = Enum.Font.GothamBold
    scriptHeader.TextSize = 14
    scriptHeader.TextColor3 = Color3.fromRGB(200, 200, 255)
    scriptHeader.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    scriptHeader.BorderSizePixel = 0
    scriptHeader.TextXAlignment = Enum.TextXAlignment.Left
    scriptHeader.Padding = UDim.new(0, 10)

    local scriptBox = Instance.new("TextBox", scriptPanel)
    scriptBox.Size = UDim2.new(1, -10, 1, -40)
    scriptBox.Position = UDim2.new(0, 5, 0, 35)
    scriptBox.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    scriptBox.TextColor3 = Color3.fromRGB(220, 220, 255)
    scriptBox.Font = Enum.Font.Code
    scriptBox.TextSize = 14
    scriptBox.TextWrapped = true
    scriptBox.TextXAlignment = Enum.TextXAlignment.Left
    scriptBox.TextYAlignment = Enum.TextYAlignment.Top
    scriptBox.MultiLine = true
    scriptBox.Text = "-- Select an event"
    scriptBox.ClearTextOnFocus = false
    scriptBox.Editable = false

    local clearButton = Instance.new("TextButton", scriptPanel)
    clearButton.Size = UDim2.new(0.4, 0, 0, 25)
    clearButton.Position = UDim2.new(0.6, 5, 1, -30)
    clearButton.Text = "Clear Events"
    clearButton.Font = Enum.Font.Gotham
    clearButton.TextSize = 13
    clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    clearButton.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
    clearButton.BorderSizePixel = 0

    local eventLogs = {}
    local selectedEvent = nil
    local currentScript = nil
    local eventCountValue = 0
    local autoExecute = false

    copyButton.MouseEnter:Connect(function()
        copyButton.BackgroundColor3 = Color3.new(0.28, 0.48, 0.8)
    end)
    copyButton.MouseLeave:Connect(function()
        copyButton.BackgroundColor3 = Color3.fromRGB(70, 120, 200)
    end)
    
    executeButton.MouseEnter:Connect(function()
        executeButton.BackgroundColor3 = Color3.new(0.24, 0.72, 0.4)
    end)
    executeButton.MouseLeave:Connect(function()
        executeButton.BackgroundColor3 = Color3.fromRGB(60, 180, 100)
    end)
    
    autoExecuteButton.MouseEnter:Connect(function()
        autoExecuteButton.BackgroundColor3 = Color3.new(0.36, 0.36, 0.48)
    end)
    autoExecuteButton.MouseLeave:Connect(function()
        autoExecuteButton.BackgroundColor3 = Color3.fromRGB(90, 90, 120)
    end)

    local function addEventLog(remote, args, scriptText)
        eventCountValue = eventCountValue + 1
        eventCount.Text = "Events: " .. eventCountValue
        
        local eventFrame = Instance.new("Frame", eventList)
        eventFrame.Size = UDim2.new(1, -5, 0, 36)
        eventFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        eventFrame.BorderSizePixel = 0
        eventFrame.LayoutOrder = eventCountValue
        
        local typeIcon = Instance.new("ImageLabel", eventFrame)
        typeIcon.Size = UDim2.new(0, 24, 0, 24)
        typeIcon.Position = UDim2.new(0, 8, 0.5, -12)
        typeIcon.BackgroundTransparency = 1
        typeIcon.Image = remote:IsA("RemoteEvent") and "rbxassetid://3926307971" or "rbxassetid://3926305904"
        typeIcon.ImageRectOffset = remote:IsA("RemoteEvent") and Vector2.new(324, 124) or Vector2.new(324, 364)
        typeIcon.ImageColor3 = remote:IsA("RemoteEvent") and Color3.fromRGB(100, 180, 255) or Color3.fromRGB(100, 255, 180)

        local nameLabel = Instance.new("TextLabel", eventFrame)
        nameLabel.Size = UDim2.new(0.7, -40, 0.5, 0)
        nameLabel.Position = UDim2.new(0, 40, 0, 2)
        nameLabel.Text = remote.Name
        nameLabel.Font = Enum.Font.GothamMedium
        nameLabel.TextSize = 14
        nameLabel.TextColor3 = Color3.fromRGB(220, 220, 255)
        nameLabel.BackgroundTransparency = 1
        nameLabel.TextXAlignment = Enum.TextXAlignment.Left
        nameLabel.TextTruncate = Enum.TextTruncate.AtEnd

        local pathLabel = Instance.new("TextLabel", eventFrame)
        pathLabel.Size = UDim2.new(0.7, -40, 0.5, 0)
        pathLabel.Position = UDim2.new(0, 40, 0.5, -2)
        pathLabel.Text = remote:GetFullName()
        pathLabel.Font = Enum.Font.Gotham
        pathLabel.TextSize = 11
        pathLabel.TextColor3 = Color3.fromRGB(170, 170, 200)
        pathLabel.BackgroundTransparency = 1
        pathLabel.TextXAlignment = Enum.TextXAlignment.Left
        pathLabel.TextTruncate = Enum.TextTruncate.AtEnd

        local typeLabel = Instance.new("TextLabel", eventFrame)
        typeLabel.Size = UDim2.new(0.25, 0, 0.5, 0)
        typeLabel.Position = UDim2.new(0.75, 0, 0.25, 0)
        typeLabel.Text = remote.ClassName:gsub("Remote", "")
        typeLabel.Font = Enum.Font.GothamBold
        typeLabel.TextSize = 12
        typeLabel.TextColor3 = Color3.fromRGB(180, 180, 220)
        typeLabel.BackgroundTransparency = 1
        typeLabel.TextXAlignment = Enum.TextXAlignment.Right

        local timeLabel = Instance.new("TextLabel", eventFrame)
        timeLabel.Size = UDim2.new(0.25, 0, 0.5, 0)
        timeLabel.Position = UDim2.new(0.75, 0, 0.5, -8)
        timeLabel.Text = os.date("%H:%M:%S")
        timeLabel.Font = Enum.Font.Gotham
        timeLabel.TextSize = 11
        timeLabel.TextColor3 = Color3.fromRGB(150, 150, 180)
        timeLabel.BackgroundTransparency = 1
        timeLabel.TextXAlignment = Enum.TextXAlignment.Right

        eventFrame.MouseButton1Click:Connect(function()
            if selectedEvent then selectedEvent.BackgroundColor3 = Color3.fromRGB(35, 35, 45) end
            eventFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            selectedEvent = eventFrame
            scriptBox.Text = scriptText
            currentScript = scriptText
        end)

        table.insert(eventLogs, {
            frame = eventFrame,
            remote = remote,
            args = args,
            script = scriptText
        })

        eventList.CanvasPosition = Vector2.new(0, eventList.CanvasPosition.Y + 50)

        if autoExecute then
            task.spawn(function()
                pcall(loadstring(scriptText))
            end)
        end
    end

    copyButton.MouseButton1Click:Connect(function()
        if currentScript then
            setclipboard(currentScript)
            copyButton.Text = "Copied!"
            task.wait(1)
            copyButton.Text = "Copy"
        end
    end)

    executeButton.MouseButton1Click:Connect(function()
        if currentScript then
            executeButton.Text = "Executing..."
            task.spawn(function()
                pcall(loadstring(currentScript))
                task.wait(0.5)
                executeButton.Text = "Execute"
            end)
        end
    end)

    autoExecuteButton.MouseButton1Click:Connect(function()
        autoExecute = not autoExecute
        autoExecuteButton.Text = autoExecute and "Auto: ON" or "Auto: OFF"
        autoExecuteButton.BackgroundColor3 = autoExecute and Color3.fromRGB(80, 160, 120) or Color3.fromRGB(90, 90, 120)
    end)

    clearButton.MouseButton1Click:Connect(function()
        for _, log in ipairs(eventLogs) do log.frame:Destroy() end
        eventLogs = {}
        eventCountValue = 0
        eventCount.Text = "Events: 0"
        scriptBox.Text = "-- Select an event"
        currentScript = nil
        selectedEvent = nil
    end)

    self.AddEventLog = addEventLog
end

local function checkcaller()
    local callingScript = getcallingscript()
    return not callingScript or callingScript == game:GetService("ScriptContext")
end

hookEvents()

task.spawn(function()
    while true do
        if #eventBuffer > 0 then
            local data = table.remove(eventBuffer)
            if Window and Window.AddEventLog then
                Window.AddEventLog(data.remote, data.args, data.script)
            end
        end
        task.wait(0.05)
    end
end)

local isHidden = false
    hideButton.MouseButton1Click:Connect(function()
        local targetSize = isHidden and UDim2.new(0, 575, 0, 375) or UDim2.new(0, 0, 0, 0)
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = targetSize
        })
        tween:Play()

        isHidden = not isHidden
        ballButton.Visible = isHidden
    end)

    ballButton.MouseButton1Click:Connect(function()
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 575, 0, 375)
        })
        tween:Play()
        isHidden = false
        ballButton.Visible = false
    end)

    return Window
end

return RANOX
