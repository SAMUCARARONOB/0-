local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local RANOX = {}

function RANOX:CreateWindow(config)
    local Window = {}

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RANOX_UI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("TextButton")
    mainFrame.Size = UDim2.new(0, 550, 0, 375)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.Text = ""
    mainFrame.AutoButtonColor = false
    mainFrame.ClipsDescendants = true
    mainFrame.Draggable = true
    mainFrame.Active = true
    mainFrame.Parent = screenGui
    Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 4)

    local stroke = Instance.new("UIStroke", mainFrame)
    stroke.Color = Color3.fromRGB(60, 0, 0)
    stroke.Thickness = 1.5
    stroke.Transparency = 0.3

    local gradient = Instance.new("UIGradient", mainFrame)
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30,30,30)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20,20,20))
    }

    local title = Instance.new("TextLabel", mainFrame)
    title.Size = UDim2.new(1, -50, 0, 25)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = config.Title or "RANOX Hub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamSemibold
    title.TextSize = 16
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.TextYAlignment = Enum.TextYAlignment.Center
    title.ClipsDescendants = true

    local hideButton = Instance.new("TextButton", mainFrame)
    hideButton.Size = UDim2.new(0, 25, 0, 25)
    hideButton.Position = UDim2.new(1, -30, 0, 0)
    hideButton.Text = "-"
    hideButton.Font = Enum.Font.GothamBold
    hideButton.TextSize = 18
    hideButton.TextColor3 = Color3.fromRGB(255, 80, 80)
    hideButton.BackgroundTransparency = 1
    hideButton.AutoButtonColor = false

    local line = Instance.new("Frame", mainFrame)
    line.Size = UDim2.new(1, 0, 0, 1)
    line.Position = UDim2.new(0, 0, 0, 25)
    line.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    line.BorderSizePixel = 0

    local sidebar = Instance.new("ScrollingFrame", mainFrame)
    sidebar.Size = UDim2.new(0, 70, 1, -25)
    sidebar.Position = UDim2.new(0, 0, 0, 25)
    sidebar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    sidebar.CanvasSize = UDim2.new(0, 0, 0, 0)
    sidebar.ScrollBarThickness = 2
    sidebar.BorderSizePixel = 0
    sidebar.AutomaticCanvasSize = Enum.AutomaticSize.Y
    sidebar.ScrollingDirection = Enum.ScrollingDirection.Y
    Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 3)

    local sidebarLayout = Instance.new("UIListLayout", sidebar)
    sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarLayout.Padding = UDim.new(0, 1)

    local tabButtons = {}
    local pages = {}
    local selectedTab = nil

    local scrollHolder = Instance.new("ScrollingFrame", mainFrame)
    scrollHolder.Size = UDim2.new(1, -80, 1, -35)
    scrollHolder.Position = UDim2.new(0, 75, 0, 30)
    scrollHolder.BackgroundTransparency = 1
    scrollHolder.BorderSizePixel = 0
    scrollHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollHolder.ScrollBarThickness = 0
    scrollHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y

    local ballButton = Instance.new("ImageButton")
    ballButton.Size = UDim2.new(0.05, 0, 0.1, 0)
    ballButton.Position = UDim2.new(0.1, 0, 0.9, 0)
    ballButton.AnchorPoint = Vector2.new(0.5, 0.5)
    ballButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ballButton.Image = "rbxassetid://6337069410"
    ballButton.BackgroundTransparency = 0
    ballButton.Visible = false
    ballButton.Active = true
    ballButton.Draggable = true
    ballButton.Parent = screenGui

    local ballCorner = Instance.new("UICorner")
    ballCorner.CornerRadius = UDim.new(0.5, 0)
    ballCorner.Parent = ballButton

    local function switchTab(name)
        for tabName, frame in pairs(pages) do
            frame.Visible = (tabName == name)
        end
        for tabName, btn in pairs(tabButtons) do
            btn.BackgroundColor3 = (tabName == name) and Color3.fromRGB(40, 0, 0) or Color3.fromRGB(10, 10, 10)
        end
        selectedTab = name
    end

    function Window:CreateTab(tabName)
        local tabBtn = Instance.new("TextButton", sidebar)
        tabBtn.Size = UDim2.new(1, 0, 0, 24)
        tabBtn.Text = tabName
        tabBtn.Font = Enum.Font.Gotham
        tabBtn.TextSize = 12
        tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabBtn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
        tabBtn.AutoButtonColor = false
        tabBtn.ClipsDescendants = true
        tabBtn.TextWrapped = true
        Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 3)

        tabButtons[tabName] = tabBtn

        tabBtn.MouseEnter:Connect(function()
            if selectedTab ~= tabName then
                tabBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            end
        end)

        tabBtn.MouseLeave:Connect(function()
            if selectedTab ~= tabName then
                tabBtn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
            end
        end)

        local tabPage = Instance.new("Frame", scrollHolder)
        tabPage.Name = tabName
        tabPage.Size = UDim2.new(1, 0, 0, 1000)
        tabPage.BackgroundTransparency = 1
        tabPage.Visible = false

        local layout = Instance.new("UIListLayout", tabPage)
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0, 8)

        pages[tabName] = tabPage

        tabBtn.MouseButton1Click:Connect(function()
            switchTab(tabName)
        end)

        if not selectedTab then
            switchTab(tabName)
        end
    end

    function Window:CreateButton(tabName, text, callback)
        local tab = pages[tabName]
        if not tab then return end

        local btn = Instance.new("TextButton", tab)
        btn.Size = UDim2.new(1, -20, 0, 26)
        btn.Position = UDim2.new(0, 10, 0, 0)
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        btn.AutoButtonColor = false
        btn.ClipsDescendants = true
        btn.TextWrapped = true
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 4)

        btn.MouseEnter:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(60, 20, 20)
        end)

        btn.MouseLeave:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end)

        btn.MouseButton1Click:Connect(function()
            pcall(callback)
        end)
    end

    function Window:CreateToggle(tabName, toggleConfig)
    local tab = pages[tabName]
    if not tab then return end

    local toggleFrame = Instance.new("Frame", tab)
    toggleFrame.Size = UDim2.new(1, -20, 0, 26)
    toggleFrame.Position = UDim2.new(0, 10, 0, 0)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleFrame.ClipsDescendants = true
    Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(0, 4)

    local label = Instance.new("TextLabel", toggleFrame)
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = toggleConfig.Text or "Toggle"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextYAlignment = Enum.TextYAlignment.Center

    local toggleButton = Instance.new("TextButton", toggleFrame)
    toggleButton.Size = UDim2.new(0, 40, 1, 0)
    toggleButton.Position = UDim2.new(1, -45, 0, 0)
    toggleButton.Text = "OFF"
    toggleButton.Font = Enum.Font.Gotham
    toggleButton.TextSize = 14
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    toggleButton.AutoButtonColor = false
    Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 4)

    local isOn = false
    toggleButton.MouseButton1Click:Connect(function()
        isOn = not isOn
        toggleButton.Text = isOn and "ON" or "OFF"
        toggleButton.BackgroundColor3 = isOn and Color3.fromRGB(0, 60, 0) or Color3.fromRGB(60, 0, 0)

        if toggleConfig.Callback then
            toggleConfig.Callback(isOn)
        end
    end)
end

    function Window:CreateLabel(tabName, text)
        local tab = pages[tabName]
        if not tab then return end

        local label = Instance.new("TextLabel", tab)
        label.Size = UDim2.new(1, -20, 0, 30)
        label.Position = UDim2.new(0, 10, 0, 0)
        label.Text = text
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.BackgroundTransparency = 1
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.TextYAlignment = Enum.TextYAlignment.Center
    end

    function Window:CreateSlider(tabName, config)
    local tab = pages[tabName]
    if not tab then return end

    local sliderFrame = Instance.new("Frame", tab)
    sliderFrame.Size = UDim2.new(1, -20, 0, 36)
    sliderFrame.Position = UDim2.new(0, 10, 0, 0)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    sliderFrame.ClipsDescendants = true
    Instance.new("UICorner", sliderFrame).CornerRadius = UDim.new(0, 4)

    local title = Instance.new("TextLabel", sliderFrame)
    title.Size = UDim2.new(1, -10, 0, 18)
    title.Position = UDim2.new(0, 5, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = config.Text or "Slider"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.Gotham
    title.TextSize = 13
    title.TextXAlignment = Enum.TextXAlignment.Left

    local sliderBar = Instance.new("Frame", sliderFrame)
    sliderBar.Size = UDim2.new(1, -20, 0, 5)
    sliderBar.Position = UDim2.new(0, 10, 1, -10)
    sliderBar.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    sliderBar.BorderSizePixel = 0
    Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(1, 0)

    local sliderFill = Instance.new("Frame", sliderBar)
    sliderFill.Size = UDim2.new(0, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 60, 0)
    sliderFill.BorderSizePixel = 0
    sliderFill.Name = "Fill"
    Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(1, 0)
    sliderFill.Parent = sliderBar

    local dragging = false
    local min = config.Min or 0
    local max = config.Max or 100
    local callback = config.Callback or function() end

    local function updateSlider(inputX)
        local rel = math.clamp((inputX - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
        sliderFill.Size = UDim2.new(rel, 0, 1, 0)
        local value = math.floor((rel * (max - min)) + min + 0.5)
        callback(value)
    end

    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input.Position.X)
        end
    end)

    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input.Position.X)
        end
    end)
end

    function Window:CreateDropdown(tabName, config)
    local tab = pages[tabName]
    if not tab then return end

    local dropdownFrame = Instance.new("Frame", tab)
    dropdownFrame.Size = UDim2.new(1, -20, 0, 30)
    dropdownFrame.Position = UDim2.new(0, 10, 0, 0)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Instance.new("UICorner", dropdownFrame).CornerRadius = UDim.new(0, 4)

    local selected = Instance.new("TextButton", dropdownFrame)
    selected.Size = UDim2.new(1, 0, 1, 0)
    selected.BackgroundTransparency = 1
    selected.Text = config.Default or "Select an option"
    selected.TextColor3 = Color3.fromRGB(255, 255, 255)
    selected.Font = Enum.Font.Gotham
    selected.TextSize = 14
    selected.TextXAlignment = Enum.TextXAlignment.Left

    local optionFrame = Instance.new("Frame")
    optionFrame.Size = UDim2.new(1, 0, 0, 0)
    optionFrame.Position = UDim2.new(0, 10, 0, 0)
    optionFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    optionFrame.BorderSizePixel = 0
    optionFrame.ClipsDescendants = true
    optionFrame.Visible = false
    optionFrame.Parent = dropdownFrame
    Instance.new("UICorner", optionFrame).CornerRadius = UDim.new(0, 4)

    local listLayout = Instance.new("UIListLayout", optionFrame)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder

    selected.MouseButton1Click:Connect(function()
        optionFrame.Visible = not optionFrame.Visible
        optionFrame.Size = optionFrame.Visible and UDim2.new(1, 0, 0, #config.Options * 26) or UDim2.new(1, 0, 0, 0)
    end)

    for _, option in ipairs(config.Options or {}) do
        local opt = Instance.new("TextButton", optionFrame)
        opt.Size = UDim2.new(1, 0, 0, 26)
        opt.BackgroundTransparency = 1
        opt.Text = option
        opt.TextColor3 = Color3.fromRGB(200, 200, 200)
        opt.Font = Enum.Font.Gotham
        opt.TextSize = 14
        opt.AutoButtonColor = false

        opt.MouseButton1Click:Connect(function()
            selected.Text = option
            optionFrame.Visible = false
            optionFrame.Size = UDim2.new(1, 0, 0, 0)
            if config.Callback then
                config.Callback(option)
            end
        end)
    end
end

    function Window:CreateTextBox(tabName, placeholderText, callback)
        local tab = pages[tabName]
        if not tab then return end

        local textBox = Instance.new("TextBox", tab)
        textBox.Size = UDim2.new(1, -20, 0, 26)
        textBox.Position = UDim2.new(0, 10, 0, 0)
        textBox.PlaceholderText = placeholderText or "Enter text"
        textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        textBox.Font = Enum.Font.Gotham
        textBox.TextSize = 14
        textBox.ClearTextOnFocus = false
        Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 4)

        textBox.FocusLost:Connect(function(enterPressed)
            if enterPressed and callback then
                callback(textBox.Text)
            end
        end)
    end

    local isHidden = false
    hideButton.MouseButton1Click:Connect(function()
        local targetSize = isHidden and UDim2.new(0, 550, 0, 375) or UDim2.new(0, 0, 0, 0)
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = targetSize
        })
        tween:Play()

        isHidden = not isHidden
        ballButton.Visible = isHidden
    end)

    ballButton.MouseButton1Click:Connect(function()
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 550, 0, 375)
        })
        tween:Play()
        isHidden = false
        ballButton.Visible = false
    end)

    return Window
end

return RANOX
